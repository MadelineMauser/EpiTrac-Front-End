---
http_interactions:
- request:
    method: get
    uri: https://epitrac-be.herokuapp.com/api/v1/articles?disease=Anthrax
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Fri, 27 Jan 2023 01:31:01 GMT
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"fb2232460dd5b0e18419c2c9a85cba0c"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 4eb3115e-c290-442d-bb71-4555b348b5db
      X-Runtime:
      - '0.868290'
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 27 Jan 2023 01:31:02 GMT
- request:
    method: get
    uri: https://epitrac-be.herokuapp.com/api/v1/articles?disease=Anthrax
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Fri, 27 Jan 2023 01:31:03 GMT
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"fb2232460dd5b0e18419c2c9a85cba0c"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 7e32e2d6-8343-43ca-9be1-c420aac4b890
      X-Runtime:
      - '0.557302'
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRhIjpbeyJpZCI6Ijg2NTEiLCJ0eXBlIjoiYXJ0aWNsZSIsImF0dHJpYnV0ZXMiOnsiYXJ0aWNsZV9pZCI6Ijg2NTEiLCJhdXRob3IiOiJLb2x0b24sIEMuIEIuIE0uLCBDLiBLLjtTdG9kZGFyZCwgUi4gQS47Q29zc2Fib29tLCBDLjtTYWx6ZXIsIEouIFMuO0tvemVsLCBULiBSLjtHYXRlcy1Ib2xsaW5nc3dvcnRoLCBNLiBBLjtDbGV2ZWxhbmQsIEMuIEEuO1Rob21wc29uLCBBLiBULjtEYWx0b24sIE0uIEYuO1lhYnNsZXksIE0uIEouO0hvZmZtYXN0ZXIsIEEuIFIuLCIsImpvdXJuYWwiOiJMZXR0IEFwcGwgTWljcm9iaW9sIiwidGl0bGUiOiJEZXRlY3Rpb24gb2YgQmFjaWxsdXMgYW50aHJhY2lzIGluIGFuaW1hbCB0aXNzdWVzIHVzaW5nIEluQmlvcyBBY3RpdmUgQW50aHJheCBEZXRlY3QgUmFwaWQgVGVzdCBsYXRlcmFsIGZsb3cgaW1tdW5vYXNzYXkiLCJ5ZWFyIjoiMjAxOSIsImRhdGUiOiIxOC0wMiIsImlzYm5faXNzbiI6IjAyNjYtODI1NCIsImtleXdvcmRzIjoiQmFjaWxsdXMgYW50aHJhY2lzOmFuaW1hbCB0aXNzdWVzOmFudGhyYXg6Y2Fwc3VsYXIgYW50aWdlbjpsYXRlcmFsIGZsb3cgaW1tdW5vYXNzYXk6cG9seWdsdXRhbWljIGFjaWQiLCJhYnN0cmFjdCI6IlRoZSBBY3RpdmUgQW50aHJheCBEZXRlY3QgKEFBRCkgUmFwaWQgVGVzdCBsYXRlcmFsIGZsb3cgaW1tdW5vYXNzYXkgaXMgYSBwb2ludC1vZi1jYXJlIGFzc2F5IHRoYXQgd2FzIHVuZGVyIGludmVzdGlnYXRpb25hbCB1c2UgZm9yIGRldGVjdGluZyBCYWNpbGx1cyBhbnRocmFjaXMgY2Fwc3VsYXIgcG9seXBlcHRpZGUgKHBvbHlnbHV0YW1pYyBhY2lkKSBpbiBodW1hbiBibG9vZCwgc2VydW0sIGFuZCBwbGFzbWEuIFNtYWxsIHNhbXBsZSB2b2x1bWVzLCByYXBpZCByZXN1bHRzLCBhbmQgbm8gcmVmcmlnZXJhdGlvbiByZXF1aXJlZCBhbGxvdyBmb3IgZWFzeSB1c2UgaW4gZWl0aGVyIHRoZSBmaWVsZCBvciBsYWJvcmF0b3J5LiBBbHRob3VnaCB0aGUgdGVzdCB3YXMgZGV2ZWxvcGVkIGZvciB1c2UgaW4gc3VzcGVjdCBjYXNlcyBvZiBodW1hbiBpbmhhbGF0aW9uIGFudGhyYXgsIGl0cyBmZWF0dXJlcyBhbHNvIG1ha2UgaXQgYSBwb3RlbnRpYWxseSBwb3dlcmZ1bCB0b29sIGZvciB0ZXN0aW5nIHN1c3BlY3QgYW5pbWFsIGNhc2VzLiBXZSB0ZXN0ZWQgYW5pbWFsIHRpc3N1ZSBzYW1wbGVzIHRoYXQgd2VyZSBjb25maXJtZWQgb3IgcnVsZWQgb3V0IGZvciBCLiBhbnRocmFjaXMuIFRoZSBBQUQgUmFwaWQgVGVzdHMgd2VyZSBhbHNvIGRlcGxveWVkIGluIHRoZSBmaWVsZCwgdGVzdGluZyBhbmltYWwgY2FyY2Fzc2VzIGR1cmluZyBhbiBhbnRocmF4IG91dGJyZWFrIGluIGhpcHBvcG90YW1pIChIaXBwb3BvdGFtdXMgYW1waGliaXVzKSBhbmQgQ2FwZSBidWZmYWxvIChTeW5jZXJ1cyBjYWZmZXIpIGluIE5hbWliaWEuIEV2YWx1YXRpb24gb2YgYWxsIHNhbXBsZXMgc2hvd2VkIGEgc3BlY2lmaWNpdHkgb2YgODIlIGFuZCBzZW5zaXRpdml0eSBvZiA5OCUuIEhvd2V2ZXIsIHdoZW4gdGhlIGFzc2F5IHdhcyB1c2VkIG9uIHNwZWNpbWVucyBmcm9tIG9ubHkgZnJlc2ggY2FyY2Fzc2VzIChkZWFkIGZvciBsZXNzIHRoYW4gMjQgaG91cnMpLCB0aGUgc3BlY2lmaWNpdHkgaW5jcmVhc2VkIHRvIDk2JS4gVGhlIEFBRCBSYXBpZCBUZXN0IGlzIGEgcmFwaWQgYW5kIHNpbXBsZSBzY3JlZW5pbmcgYXNzYXksIGJ1dCBjb25maXJtYXRvcnkgdGVzdGluZyBuZWVkcyB0byBiZSBkb25lLCBlc3BlY2lhbGx5IHdoZW4gdGhlIGFnZSBvZiB0aGUgc2FtcGxlIChkYXlzIGFuaW1hbCBoYXMgYmVlbiBkZWNlYXNlZCkgaXMgdW5rbm93bi4gVGhpcyBhcnRpY2xlIGlzIHByb3RlY3RlZCBieSBjb3B5cmlnaHQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIiwidXJsIjoiaHR0cHM6Ly93d3cubmNiaS5ubG0ubmloLmdvdi9wdWJtZWQvMzA3NzYxNDMiLCJkb2kiOiIxMC4xMTExL2xhbS4xMzEzNCJ9fSx7ImlkIjoiMTA3ODgiLCJ0eXBlIjoiYXJ0aWNsZSIsImF0dHJpYnV0ZXMiOnsiYXJ0aWNsZV9pZCI6IjEwNzg4IiwiYXV0aG9yIjoiTmRlcml0dSwgTC4gTS47R2FjaG9oaSwgSi47T3RpZW5vLCBGLjtNb2dvYSwgRS4gRy47TXV0dXJpLCBNLjtNd2F0b25kbywgQS47T3Nvcm8sIEUuIE0uO05nZXJlLCBJLjtNdW55dWEsIFAuIE0uO095YXMsIEguO05qYWdpLCBPLjtMb2ZncmVuLCBFLjtNYXJzaCwgVC47V2lkZG93c29uLCBNLiBBLjtCZXR0LCBCLjtOamVuZ2EsIE0uIEsuIiwiam91cm5hbCI6IkJNQyBJbmZlY3QgRGlzIiwidGl0bGUiOiJTcGF0aWFsIGNsdXN0ZXJpbmcgb2YgbGl2ZXN0b2NrIEFudGhyYXggZXZlbnRzIGFzc29jaWF0ZWQgd2l0aCBhZ3JvLWVjb2xvZ2ljYWwgem9uZXMgaW4gS2VueWEsIDE5NTctMjAxNyIsInllYXIiOiIyMDIxIiwiZGF0ZSI6IjE4LTAyIiwiaXNibl9pc3NuIjoiMTQ3MS0yMzM0Iiwia2V5d29yZHMiOiJBZ3JvLWVjb2xvZ2ljYWwgem9uZXM6QW50aHJheDpDbHVzdGVyaW5nOktlbnlhOkxpdmVzdG9jazplZGl0b3JpYWwgYm9hcmQgZm9yIHRoZSBCTUMgSW5mZWN0aW91cyBEaXNlYXNlcyBqb3VybmFsLiIsImFic3RyYWN0IjoiQkFDS0dST1VORDogRGV2ZWxvcGluZyBkaXNlYXNlIHJpc2sgbWFwcyBmb3IgcHJpb3JpdHkgZW5kZW1pYyBhbmQgZXBpc29kaWMgZGlzZWFzZXMgaXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IGltcG9ydGFudCBmb3IgbW9yZSBlZmZlY3RpdmUgZGlzZWFzZSBtYW5hZ2VtZW50LCBwYXJ0aWN1bGFybHkgaW4gcmVzb3VyY2UgbGltaXRlZCBjb3VudHJpZXMuIEZvciBlbmRlbWljIGFuZCBlYXNpbHkgZGlhZ25vc2VkIGRpc2Vhc2VzIHN1Y2ggYXMgYW50aHJheCwgdXNpbmcgaGlzdG9yaWNhbCBkYXRhIHRvIGlkZW50aWZ5IGhvdHNwb3RzIGFuZCBzdGFydCB0byBkZWZpbmUgZWNvbG9naWNhbCByaXNrIGZhY3RvcnMgb2YgaXRzIG9jY3VycmVuY2UgaXMgYSBwbGF1c2libGUgYXBwcm9hY2guIFVzaW5nIDY2NiBsaXZlc3RvY2sgYW50aHJheCBldmVudHMgcmVwb3J0ZWQgaW4gS2VueWEgb3ZlciA2MD95ZWFycyAoMTk1Ny0yMDE3KSwgd2UgZGV0ZXJtaW5lZCB0aGUgdGVtcG9yYWwgYW5kIHNwYXRpYWwgcGF0dGVybnMgb2YgdGhlIGRpc2Vhc2UgYXMgYSBzdGVwIHRvd2FyZHMgaWRlbnRpZnlpbmcgYW5kIGNoYXJhY3Rlcml6aW5nIGFudGhyYXggaG90c3BvdHMgaW4gdGhlIHJlZ2lvbi4gTUVUSE9EUzogRGF0YSB3ZXJlIGluaXRpYWxseSBhZ2dyZWdhdGVkIGJ5IGFkbWluaXN0cmF0aXZlIHVuaXQgYW5kIGxhdGVyIGFuYWx5emVkIGJ5IGFncm8tZWNvbG9naWNhbCB6b25lcyAoQUVaKSB0byByZXZlYWwgYW50aHJheCBzcGF0aW8tdGVtcG9yYWwgdHJlbmRzIGFuZCBwYXR0ZXJucy4gVmFyaWF0aW9ucyBpbiB0aGUgb2NjdXJyZW5jZSBvZiBhbnRocmF4IGV2ZW50cyB3ZXJlIGVzdGltYXRlZCBieSBmaXR0aW5nIFBvaXNzb24gZ2VuZXJhbGl6ZWQgbGluZWFyIG1peGVkLWVmZmVjdHMgbW9kZWxzIHRvIHRoZSBkYXRhIHdpdGggQUVacyBhbmQgY2FsZW5kYXIgbW9udGhzIGFzIGZpeGVkIGVmZmVjdHMgYW5kIHN1Yi1jb3VudGllcyBhcyByYW5kb20gZWZmZWN0cy4gUkVTVUxUUzogVGhlIGNvdW50cnkgcmVwb3J0ZWQgYXBwcm94aW1hdGVseSAxMCBhbnRocmF4IGV2ZW50cyBhbm51YWxseSwgd2l0aCB0aGUgbnVtYmVyIGluY3JlYXNpbmcgdG8gYXMgbWFueSBhcyA1MCBhbm51YWxseSBieSB0aGUgeWVhciAyMDA1LiBTcGF0aWFsIGNsYXNzaWZpY2F0aW9uIG9mIHRoZSBldmVudHMgaW4gZWlnaHQgY291bnRpZXMgdGhhdCByZXBvcnRlZCB0aGUgaGlnaGVzdCBudW1iZXJzIHJldmVhbGVkIHNwYXRpYWwgY2x1c3RlcmluZyBpbiBjZXJ0YWluIGFkbWluaXN0cmF0aXZlIHN1Yi1jb3VudGllcywgd2l0aCAxMiUgb2YgdGhlIHN1Yi1jb3VudGllcyByZXNwb25zaWJsZSBmb3Igb3ZlciAzMCUgb2YgYW50aHJheCBldmVudHMsIHdoZXJlYXMgMzYlIGRpZCBub3QgcmVwb3J0IGFueSBhbnRocmF4IGRpc2Vhc2Ugb3ZlciB0aGUgNjAteWVhciBwZXJpb2QuIFdoZW4gc2VncmVnYXRlZCBieSBBRVpzLCB0aGVyZSB3YXMgc2lnbmlmaWNhbnRseSBncmVhdGVyIHJpc2sgb2YgYW50aHJheCBkaXNlYXNlIG9jY3VycmluZyBpbiBhZ3JvLWFscGluZSwgaGlnaCwgYW5kIG1lZGl1bSBwb3RlbnRpYWwgQUVacyB3aGVuIGNvbXBhcmVkIHRvIHRoZSBhZ3JpY3VsdHVyYWxseSBsb3cgcG90ZW50aWFsIGFyaWQgYW5kIHNlbWktYXJpZCBBRVpzIG9mIHRoZSBjb3VudHJ5IChwP1x1MDAzYz8wLjA1KS4gSW50ZXJlc3RpbmdseSwgY2F0dGxlIHdlcmU/XHUwMDNlPzEwIHRpbWVzIG1vcmUgbGlrZWx5IHRvIGJlIGluZmVjdGVkIGJ5IEIuIGFudGhyYWNpcyB0aGFuIHNoZWVwLCBnb2F0cywgb3IgY2FtZWxzLiBUaGVyZSB3YXMgbG93ZXIgcmlzayBvZiBhbnRocmF4IGV2ZW50cyBpbiBBdWd1c3QgKFA/PT8wLjAzNCkgYW5kIERlY2VtYmVyIChQPz0/MC4wNjEpLCBtb250aHMgdGhhdCBmb2xsb3cgbG9uZyBhbmQgc2hvcnQgcmFpbiBwZXJpb2RzLCByZXNwZWN0aXZlbHkuIENPTkNMVVNJT046IFRha2VuIHRvZ2V0aGVyLCB0aGVzZSBmaW5kaW5ncyBzdWdnZXN0IGV4aXN0ZW5jZSBvZiBjZXJ0YWluIGdlb2dyYXBoaWMsIGVjb2xvZ2ljYWwsIGFuZCBkZW1vZ3JhcGhpYyByaXNrIGZhY3RvcnMgdGhhdCBwcm9tb3RlIEIuIGFudGhyYWNpcyBwZXJzaXN0ZW5jZSBhbmQgdHJhc21pc3Npb24gaW4gdGhlIGRpc2Vhc2UgaG90c3BvdHMuIiwidXJsIjoiaHR0cHM6Ly9wdWJtZWQubmNiaS5ubG0ubmloLmdvdi8zMzYwMjE2MCIsImRvaSI6IjEwLjExODYvczEyODc5LTAyMS0wNTg3MS05In19LHsiaWQiOiIxMTc0MCIsInR5cGUiOiJhcnRpY2xlIiwiYXR0cmlidXRlcyI6eyJhcnRpY2xlX2lkIjoiMTE3NDAiLCJhdXRob3IiOiJDb3NzYWJvb20sIEMuIE0uIEsuLCBTLjtIYXVmaWt1LCBCLjtLYXRqaXVhbmpvLCBQLjtLYW5ueWluZ2EsIEEuO01iYWksIEsuO1NodXJvLCBULjtIYXVzaWt1LCBKLjtMaWthbmRvLCBBLjtTaGlrZXNobywgUi47TnlhcmtvLCBLLjtNaWxsZXIsIEwuIEEuO0Fnb2xvcnksIFMuO1ZpZWlyYSwgQS4gUi47U2FsemVyLCBKLiBTLjtCb3dlciwgVy4gQS47Q2FtcGJlbGwsIEwuO0tvbHRvbiwgQy4gQi47TWFyc3RvbiwgQy47R2FyeSwgSi47Qm9sbHdlZywgQi4gQy47WmFraSwgUy4gUi47SG9mZm1hc3RlciwgQS47V2Fsa2UsIEguIiwiam91cm5hbCI6IkVtZXJnIEluZmVjdCBEaXMiLCJ0aXRsZSI6IkFudGhyYXggZXBpem9vdGljIGluIHdpbGRsaWZlLCBCd2Fid2F0YSBOYXRpb25hbCBQYXJrLCBOYW1pYmlhLCAyMDE3IiwieWVhciI6IjIwMTkiLCJkYXRlIjoiTWF5IiwiaXNibl9pc3NuIjoiMTA4MC02MDQwIiwia2V5d29yZHMiOiJBZnJpY2E6QmFjaWxsdXMgYW50aHJhY2lzOk5hbWliaWE6YW50aHJheDpiYWN0ZXJpYTpjb250cm9sOmVwaXpvb3RpYzp3aWxkbGlmZTp6b29ub3NlcyIsImFic3RyYWN0IjoiSW4gbGF0ZSBTZXB0ZW1iZXIgMjAxNywgQndhYndhdGEgTmF0aW9uYWwgUGFyayBpbiBOYW1pYmlhIGV4cGVyaWVuY2VkIGEgc3VkZGVuIGRpZS1vZmYgb2YgaGlwcG9wb3RhbXVzZXMgYW5kIENhcGUgYnVmZmFsby4gQSBtdWx0aW9yZ2FuaXphdGlvbmFsIHJlc3BvbnNlIHdhcyBpbml0aWF0ZWQsIGludm9sdmluZyBzZXZlcmFsIG1pbmlzdHJpZXMgd2l0aGluIE5hbWliaWEgYW5kIHRoZSBVUyBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24uIFJhcGlkIGludGVydmVudGlvbnMgcmVzdWx0ZWQgaW4gemVybyBodW1hbiBvciBsaXZlc3RvY2sgY2FzZXMgYXNzb2NpYXRlZCB3aXRoIHRoaXMgZXBpem9vdGljLiIsInVybCI6Imh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcHVibWVkLzMxMDAyMDcyIiwiZG9pIjoiMTAuMzIwMS9laWQyNTA1LjE4MDg2NyJ9fSx7ImlkIjoiMTI4NTMiLCJ0eXBlIjoiYXJ0aWNsZSIsImF0dHJpYnV0ZXMiOnsiYXJ0aWNsZV9pZCI6IjEyODUzIiwiYXV0aG9yIjoiQmxhY2tidXJuLCBKLiBLLjtLZW51LCBFLjtBc2llZHUtQmVrb2UsIEYuO1NhcmtvZGllLCBCLjtLcmFjYWxpaywgSS4gVC47Qm93ZXIsIFcuIEEuO1N0b2RkYXJkLCBSLiBBLjtUcmF4bGVyLCBSLiBNLiIsImpvdXJuYWwiOiJFbWVyZyBJbmZlY3QgRGlzIiwidGl0bGUiOiJIaWdoIENhc2UtRmF0YWxpdHkgUmF0ZSBmb3IgSHVtYW4gQW50aHJheCwgTm9ydGhlcm4gR2hhbmEsIDIwMDUtMjAxNiIsInllYXIiOiIyMDIxIiwiZGF0ZSI6IkFwciIsImlzYm5faXNzbiI6IjEwODAtNjA0MCAoUHJpbnQpOjEwODAtNjA0MCIsImtleXdvcmRzIjoiQWZyaWNhOkJhY2lsbHVzIGFudGhyYWNpczpHaGFuYTpiYWN0ZXJpYTpjYXNlLWZhdGFsaXR5IHJhdGU6Y3V0YW5lb3VzIGFudGhyYXg6ZW50ZXJpYyBpbmZlY3Rpb25zOmZvb2Qgc2FmZXR5Omdhc3Ryb2ludGVzdGluYWwgYW50aHJheDpodW1hbiBhbnRocmF4OmxpdmVzdG9jazpsaXZlc3RvY2sgdmFjY2luYXRpb246bW9ydGFsaXR5OnN1cnZlaWxsYW5jZSIsImFic3RyYWN0IjoiVGhlIGh1bWFuIGN1dGFuZW91cyBhbnRocmF4IGNhc2UtZmF0YWxpdHkgcmF0ZSBpcyA/MSUgd2hlbiB0cmVhdGVkLCA1JS0yMCUgd2hlbiB1bnRyZWF0ZWQuIFdlIHJlcG9ydCBoaWdoIGNhc2UtZmF0YWxpdHkgcmF0ZXMgKG1lZGlhbsKgMzUuMCU7IDk1JSBDSSAyMS4xJS02Ni43JSkgZHVyaW5nIDIwMDUtMjAxNiBsaW5rZWQgdG8gbGl2ZXN0b2NrIGhhbmRsaW5nIGluIG5vcnRoZXJuIEdoYW5hLCB3aGVyZSB2ZXRlcmluYXJ5IHJlc291cmNlcyBhcmUgbGltaXRlZC4gTGl2ZXN0b2NrIHZhY2NpbmF0aW9uIGFuZCBhY2Nlc3MgdG8gaHVtYW4gdHJlYXRtZW50IHNob3VsZCBiZSBldmFsdWF0ZWQuIiwidXJsIjoiaHR0cHM6Ly9wdWJtZWQubmNiaS5ubG0ubmloLmdvdi8zMzc1NDk5MyIsImRvaSI6IjEwLjMyMDEvZWlkMjcwNC4yMDQ0OTYifX0seyJpZCI6IjE2ODg4IiwidHlwZSI6ImFydGljbGUiLCJhdHRyaWJ1dGVzIjp7ImFydGljbGVfaWQiOiIxNjg4OCIsImF1dGhvciI6IkJhcnIsIEouIFIuIEIuLCBBLiBFLiwgIFF1aW5uLCBDLiBQLiwiLCJqb3VybmFsIjoiSiBFeHBvIFNjaSBFbnZpcm9uIEVwaWRlbWlvbCIsInRpdGxlIjoiQW50aHJheDogbW9kZXJuIGV4cG9zdXJlIHNjaWVuY2UgY29tYmF0cyBhIGRlYWRseSwgYW5jaWVudCBkaXNlYXNlIiwieWVhciI6IjIwMTAiLCJkYXRlIjoiTm92IiwiaXNibl9pc3NuIjoiMTU1OS0wNjRYIChFbGVjdHJvbmljKTogMTU1OS0wNjMxIChMaW5raW5nKSIsImtleXdvcmRzIjpudWxsLCJhYnN0cmFjdCI6IldlIG5vdyBoYXZlIHRoZSB0ZWNobm9sb2d5IHRvIGRldGVjdCBhbmQgcXVhbnRpZnkgYW50aHJheCB0b3hpbiBsZXZlbHMuIFRoaXMgdGVjaG5vbG9neSBoYXMgdHJlbWVuZG91cyBwcm9taXNlIGZvciBkaWFnbm9zaXMgYXQgdmVyeSBlYXJseSBzdGFnZXMgb2YgZGlzZWFzZSBhbmQgbW9uaXRvcmluZyB0aGUgZWZmaWNhY3kgb2YgdHJlYXRtZW50cywgaW5jbHVkaW5nIHRob3NlIGZvciBkaXNlYXNlIGFyaXNpbmcgZnJvbSBhbnRocmF4LXJlbGF0ZWQgdGVycm9yaXN0IGV2ZW50cy4iLCJ1cmwiOiJodHRwOi8vaW50cmFuZXQuY2RjLmdvdi9waGxpYy9kaWdpdGFscmVwb3NpdG9yeS9TY2llbmNlQ2xpcHMvdjJpc3M0M19BdXRob3JzX0JhcnIucGRmIiwiZG9pIjoiMTAuMTAzOC9qZXMuMjAxMC40OSJ9fSx7ImlkIjoiMTc1NjgiLCJ0eXBlIjoiYXJ0aWNsZSIsImF0dHJpYnV0ZXMiOnsiYXJ0aWNsZV9pZCI6IjE3NTY4IiwiYXV0aG9yIjoiRGF3c29uLCBQLjtTY2hyb2R0LCBDLiBBLjtGZWxkbWFubiwgSy47VHJheGxlciwgUi4gTS47R2VlLCBKLiBFLjtLb2x0b24sIEMuIEIuO01hcnN0b24sIEMuIEsuO0d1bHZpaywgQy4gQS47QW50b25pbmksIEouIE0uO05lZ3LDs24sIE0uIEUuO01jcXVpc3RvbiwgSi4gUi47SGVuZHJpY2tzLCBLLjtXZWluZXIsIFouO0JhbHNhbW8sIEcuIEEuO1Nva29sLCBULjtCeWVycywgUC47VGF5bG9yLCBLLjtaYWhlZXIsIFMuO0xvbmcsIFMuO08nc3VsbGl2YW4sIEIuO0RlIFBlcmlvLCBNLiBBLjtIb2ZmbWFzdGVyLCBBLiBSLjtTYWx6ZXIsIEouIFMuO0Jvd2VyLCBXLiBBLiIsImpvdXJuYWwiOiJNTVdSIE1vcmIgTW9ydGFsIFdrbHkgUmVwIiwidGl0bGUiOiJOb3RlcyBmcm9tIHRoZSBGaWVsZDogRmF0YWwgQW50aHJheCBQbmV1bW9uaWEgaW4gV2VsZGVycyBhbmQgT3RoZXIgTWV0YWx3b3JrZXJzIENhdXNlZCBieSBCYWNpbGx1cyBjZXJldXMgR3JvdXAgQmFjdGVyaWEgQ29udGFpbmluZyBBbnRocmF4IFRveGluIEdlbmVzIC0gVS5TLiBHdWxmIENvYXN0IFN0YXRlcywgMTk5NC0yMDIwIiwieWVhciI6IjIwMjEiLCJkYXRlIjoiMTUtMTAiLCJpc2JuX2lzc24iOiIwMTQ5LTIxOTUiLCJrZXl3b3JkcyI6bnVsbCwiYWJzdHJhY3QiOm51bGwsInVybCI6Imh0dHBzOi8vcHVibWVkLm5jYmkubmxtLm5paC5nb3YvMzQ2NDg0ODIiLCJkb2kiOiIxMC4xNTU4NS9tbXdyLm1tNzA0MWE0In19LHsiaWQiOiIxODQ5NSIsInR5cGUiOiJhcnRpY2xlIiwiYXR0cmlidXRlcyI6eyJhcnRpY2xlX2lkIjoiMTg0OTUiLCJhdXRob3IiOiJLb3VybmlrYWtpcywgQi4gTS4sIEsuIEYuLCAgTWNDbGVlcnksIFIuIEUuLCAgU2hhZG9teSwgUy4gVi4sICBSYW1vcywgRy4sIiwiam91cm5hbCI6IkogT2NjdXAgRW52aXJvbiBIeWciLCJ0aXRsZSI6IkFudGhyYXggbGV0dGVycyBpbiBhbiBvcGVuIG9mZmljZSBlbnZpcm9ubWVudDogZWZmZWN0cyBvZiBzZWxlY3RlZCBDREMgcmVzcG9uc2UgZ3VpZGVsaW5lcyBvbiBwZXJzb25hbCBleHBvc3VyZSBhbmQgYnVpbGRpbmcgY29udGFtaW5hdGlvbiIsInllYXIiOiIyMDExIiwiZGF0ZSI6IkZlYiIsImlzYm5faXNzbiI6IjE1NDUtOTYzMiAoRWxlY3Ryb25pYyk6IDE1NDUtOTYyNCAoTGlua2luZykiLCJrZXl3b3JkcyI6bnVsbCwiYWJzdHJhY3QiOiJJbiAyMDAxLCBsZXR0ZXJzIGZpbGxlZCB3aXRoIGEgcG93ZGVyIGNvbnRhaW5pbmcgYW50aHJheCAoQmFjaWxsdXMgYW50aHJhY2lzKSBzcG9yZXMgd2VyZSBkZWxpdmVyZWQgYnkgbWFpbCB0byBhIG51bWJlciBvZiBnb3Zlcm5tZW50YWwgYW5kIG1lZGlhIGxvY2F0aW9ucyB3aXRoaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIEluIHJlc3BvbnNlLCB0aGUgVS5TLiBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24gKENEQykgcHJvdmlkZWQgZ3VpZGVsaW5lcyBmb3Igb2ZmaWNlIHBlcnNvbm5lbCB3aG8gbWlnaHQgZW5jb3VudGVyIGEgbGV0dGVyIGNvbnRhaW5pbmcgc3VzcGljaW91cyBwb3dkZXIuIFRoZXNlIGd1aWRlbGluZXMgd2VyZSBkZXZlbG9wZWQgZHVyaW5nIHRoZSBjcmlzaXMgYW5kIGluIHRoZSBhYnNlbmNlIG9mIGV4cGVyaW1lbnRhbCBkYXRhIGZyb20gbGFib3JhdG9yeSBvciBmaWVsZCBpbnZlc3RpZ2F0aW9ucy4gQW4gb2J2aW91cyBuZWVkIHRodXMgZXhpc3RzIGZvciBxdWFudGl0YXRpdmUgYW5kIHNjaWVudGlmaWMgdmVyaWZpY2F0aW9uIGZvciB2YWxpZGF0aW9uIG9mIHRoZXNlIGd1aWRlbGluZXMuIFRoaXMgc3R1ZHkgYXR0ZW1wdHMgdG8gYWRkcmVzcyB0aGlzIG5lZWQsIGFkYXB0aW5nIGVhcmxpZXIgd29yayB0aGF0IHVzZWQgYSBtdWx0aXBsZSBzbWFsbCBvZmZpY2UgdGVzdCBzaXRlIHRvIGNyZWF0ZSBhIG1vZGVsIHN5c3RlbSBpbiBhbiBvcGVuIG9mZmljZSB0ZXN0IHNpdGUgaW4gYSB2YWNhdGVkIG9mZmljZSBidWlsZGluZyBpbiB3aGljaCBCYWNpbGx1cyBhdHJvcGhhZXVzIHNwb3JlcyAoYXMgYSBzaW11bGFudCBmb3IgQi4gYW50aHJhY2lzIHNwb3Jlcykgd2VyZSByZWxlYXNlZCBieSBvcGVuaW5nIGEgbGV0dGVyLiBVc2luZyBTRig2KSBhcyBhIHRyYWNlciBnYXMsIHNtb2tlIHR1YmVzIChjb250YWluaW5nIHN0YW5uaWMgY2hsb3JpZGUpIHRvIHZpc3VhbGl6ZSBhaXJmbG93LCBjdWx0dXJhYmxlIGFlcm9zb2wgc2FtcGxpbmcsIGFuZCBhZXJvc29sIHNwZWN0cm9tZXRyeSB3ZSB3ZXJlIGFibGUgdG8gY2hhcmFjdGVyaXplIGFpcmZsb3cgYW5kIHVubWl0aWdhdGVkIHNwb3JlIGFlcm9zb2wgZGlzc2VtaW5hdGlvbiB3aXRoaW4gdGhlIG9mZmljZSB0ZXN0IHNpdGUuIFN1YnNlcXVlbnRseSwgdHdvIHNjcmlwdGVkIHRlc3Qgc2NlbmFyaW9zIHdlcmUgdXNlZCB0byByZXByb2R1Y2Ugc2VsZWN0ZWQgcG9ydGlvbnMgb2YgdGhlIGV4aXN0aW5nIENEQyByZXNwb25zZSBndWlkZWxpbmVzIGFuZCBhIG1vZGlmaWVkIHZlcnNpb24gd2hlcmUgdGhlIGNvbnRhbWluYXRlZCBsZXR0ZXIgb3BlbmVyIHdhcm5lZCBjby13b3JrZXJzIHRvIGV2YWN1YXRlIHRoZW4gd2FpdGVkIDUgbWluIGJlZm9yZSBkb2luZyBzbyBoaW1zZWxmLiBCeSBub3QgbGVhdmluZyB0b2dldGhlciB3aXRoIG90aGVyIGNvLXdvcmtlcnMsIHRoZSByaXNrIG9mIHRoZSBsZXR0ZXIgb3BlbmVyIGNyb3NzLWNvbnRhbWluYXRpbmcgb3RoZXJzIHdhcyBlbGltaW5hdGVkLiBUaGUgdG90YWwgcG90ZW50aWFsIHNwb3JlIGFlcm9zb2wgZXhwb3N1cmUgb2YgdGhlIGxldHRlciBvcGVuZXIgd2FzIG5vdCBhZmZlY3RlZCBieSByZW1haW5pbmcgc3RpbGwgYW5kIHdhaXRpbmcgNSBtaW4gdG8gYWxsb3cgY28td29ya2VycyB0byBlc2NhcGUgZmlyc3QgYmVmb3JlIGxlYXZpbmcgdGhlIG9mZmljZS4gQ2xvc2luZyBvZmZpY2UgZG9vcnMgYW5kIHF1aWNrbHkgZGVhY3RpdmF0aW5nIHRoZSBoZWF0aW5nLCB2ZW50aWxhdGlvbiwgYW5kIGFpciBjb25kaXRpb25pbmcgc3lzdGVtIHNpZ25pZmljYW50bHkgcmVkdWNlZCBzcG9yZSBhZXJvc29sIGNvbmNlbnRyYXRpb25zIG91dHNpZGUgdGhlIG1haW4gb3BlbiBvZmZpY2UgaW4gd2hpY2ggdGhleSBoYWQgYmVlbiByZWxlYXNlZC4iLCJ1cmwiOiJodHRwOi8vaW50cmFuZXQuY2RjLmdvdi9waGxpYy9kaWdpdGFscmVwb3NpdG9yeS9TY2llbmNlQ2xpcHMvdjNpc3M3X0F1dGhvcnNfS291cm5pa2FraXMucGRmIiwiZG9pIjoiMTAuMTA4MC8xNTQ1OTYyNC4yMDExLjU0NzQ1NCJ9fSx7ImlkIjoiMjI5NzEiLCJ0eXBlIjoiYXJ0aWNsZSIsImF0dHJpYnV0ZXMiOnsiYXJ0aWNsZV9pZCI6IjIyOTcxIiwiYXV0aG9yIjoiQ2hha3JhYm9ydHksIEEuIEsuLCBTLiBVLiwgIEhhc25hdCwgTS4gQS4sICBQYXJ2ZWVuLCBTLiwgIElzbGFtLCBNLiBTLiwgIE1pa29sb24sIEEuLCAgQ2hha3JhYm9ydHksIFIuIEsuLCAgQWhtZWQsIEIuIE4uLCAgQXJhLCBLLiwgIEhhaWRlciwgTi4sICBaYWtpLCBTLiBSLiwgIEhvZmZtYXN0ZXIsIEEuIFIuLCAgUmFobWFuLCBNLiwgIEx1YnksIFMuIFAuLCAgSG9zc2FpbiwgTS4gSi4sIiwiam91cm5hbCI6IkFtIEogVHJvcCBNZWQgSHlnIiwidGl0bGUiOiJBbnRocmF4IG91dGJyZWFrcyBpbiBCYW5nbGFkZXNoLCAyMDA5LTIwMTAiLCJ5ZWFyIjoiMjAxMiIsImRhdGUiOiJBcHIiLCJpc2JuX2lzc24iOiIxNDc2LTE2NDUgKEVsZWN0cm9uaWMpOiAwMDAyLTk2MzcgKExpbmtpbmcpIiwia2V5d29yZHMiOm51bGwsImFic3RyYWN0IjoiRHVyaW5nIEF1Z3VzdCAyMDA5LU9jdG9iZXIgMjAxMCwgYSBtdWx0aWRpc2NpcGxpbmFyeSB0ZWFtIGludmVzdGlnYXRlZCAxNCBvdXRicmVha3Mgb2YgYW5pbWFsIGFuZCBodW1hbiBhbnRocmF4IGluIEJhbmdsYWRlc2ggdG8gaWRlbnRpZnkgdGhlIGV0aW9sb2d5LCBwYXRod2F5IG9mIHRyYW5zbWlzc2lvbiwgYW5kIHNvY2lhbCwgYmVoYXZpb3JhbCwgYW5kIGN1bHR1cmFsIGZhY3RvcnMgdGhhdCBsZWQgdG8gdGhlc2Ugb3V0YnJlYWtzLiBUaGUgdGVhbSBpZGVudGlmaWVkIDE0MCBhbmltYWwgY2FzZXMgb2YgYW50aHJheCBhbmQgMjczIGh1bWFuIGNhc2VzIG9mIGN1dGFuZW91cyBhbnRocmF4LiBOaW5ldHkgb25lIHBlcmNlbnQgb2YgcGVyc29ucyBpbiB3aG9tIGN1dGFuZW91cyBhbnRocmF4IGRldmVsb3BlZCBoYWQgaGlzdG9yeSBvZiBidXRjaGVyaW5nIHNpY2sgYW5pbWFscywgaGFuZGxpbmcgcmF3IG1lYXQsIGNvbnRhY3Qgd2l0aCBhbmltYWwgc2tpbiwgb3Igd2VyZSBwcmVzZW50IGF0IHNsYXVnaHRlcmluZyBzaXRlcy4gRWFjaCB5ZWFyLCBCYWNpbGx1cyBhbnRocmFjaXMgb2YgaWRlbnRpY2FsIGdlbm90eXBlcyB3ZXJlIGlzb2xhdGVkIGZyb20gYW5pbWFsIGFuZCBodW1hbiBjYXNlcy4gSW5hZGVxdWF0ZSBsaXZlc3RvY2sgdmFjY2luYXRpb24gY292ZXJhZ2UsIGxhY2sgb2YgYXdhcmVuZXNzIG9mIHRoZSByaXNrIG9mIGFudGhyYXggdHJhbnNtaXNzaW9uIGZyb20gYW5pbWFsIHRvIGh1bWFucywgc29jaWFsIG5vcm1zIGFuZCBwb3ZlcnR5IGNvbnRyaWJ1dGVkIHRvIHRoZXNlIG91dGJyZWFrcy4gQWRkcmVzc2luZyB0aGVzZSBjaGFsbGVuZ2VzIGFuZCBhZG9wdGluZyBhIGpvaW50IGFuaW1hbCBhbmQgaHVtYW4gaGVhbHRoIGFwcHJvYWNoIGNvdWxkIGNvbnRyaWJ1dGUgdG8gZGV0ZWN0aW5nIGFuZCBwcmV2ZW50aW5nIHN1Y2ggb3V0YnJlYWtzIGluIHRoZSBmdXR1cmUuIiwidXJsIjoiaHR0cDovL2ludHJhbmV0LmNkYy5nb3YvcGhsaWMvZGlnaXRhbHJlcG9zaXRvcnkvU2NpZW5jZUNsaXBzL3Y0aXNzMTVfQXV0aG9yc19DaGFrcmFib3J0eS5wZGYiLCJkb2kiOiIxMC40MjY5L2FqdG1oLjIwMTIuMTEtMDIzNCJ9fSx7ImlkIjoiMjM4NjMiLCJ0eXBlIjoiYXJ0aWNsZSIsImF0dHJpYnV0ZXMiOnsiYXJ0aWNsZV9pZCI6IjIzODYzIiwiYXV0aG9yIjoiUGFqZXdza2ksIE4uIE0uIFMuLCBTLiwgIFF1aW5uLCBDLiBQLiwgIFBhcmtlciwgUy4gRC4sICBXaWVuZXIsIEguLCAgQWlzc2FuaSwgQi4sICBNY0tpbm5leSwgQi4gQS4sICBQb2xhbmQsIEcuIEEuLCAgRWRiZXJnLCBKLiBDLiwgIEtpbWJlcmx5LCBSLiBQLiwgIFRhbmcsIEouLCAgS2FzbG93LCBSLiBBLiwiLCJqb3VybmFsIjoiVmFjY2luZSIsInRpdGxlIjoiQSBnZW5vbWUtd2lkZSBhc3NvY2lhdGlvbiBzdHVkeSBvZiBob3N0IGdlbmV0aWMgZGV0ZXJtaW5hbnRzIG9mIHRoZSBhbnRpYm9keSByZXNwb25zZSB0byBBbnRocmF4IFZhY2NpbmUgQWRzb3JiZWQiLCJ5ZWFyIjoiMjAxMiIsImRhdGUiOiI3LUp1biIsImlzYm5faXNzbiI6IjE4NzMtMjUxOCAoRWxlY3Ryb25pYyk6IDAyNjQtNDEwWCAoTGlua2luZykiLCJrZXl3b3JkcyI6bnVsbCwiYWJzdHJhY3QiOiJTZXZlcmFsIGxpbmVzIG9mIGV2aWRlbmNlIGhhdmUgc3VwcG9ydGVkIGEgaG9zdCBnZW5ldGljIGNvbnRyaWJ1dGlvbiB0byB2YWNjaW5lIHJlc3BvbnNlLCBidXQgZ2Vub21lLXdpZGUgYXNzZXNzbWVudHMgZm9yIHNwZWNpZmljIGRldGVybWluYW50cyBoYXZlIGJlZW4gc3BhcnNlLiBIZXJlIHdlIGRlc2NyaWJlIGEgZ2Vub21lLXdpZGUgYXNzb2NpYXRpb24gc3R1ZHkgKEdXQVMpIG9mIHByb3RlY3RpdmUgYW50aWdlbi1zcGVjaWZpYyBhbnRpYm9keSAoQWJQQSkgcmVzcG9uc2VzIGFtb25nIDcyNiBFdXJvcGVhbi1BbWVyaWNhbnMgd2hvIHJlY2VpdmVkIEFudGhyYXggVmFjY2luZSBBZHNvcmJlZCAoQVZBKSBhcyBwYXJ0IG9mIGEgY2xpbmljYWwgdHJpYWwuIEFmdGVyIHF1YWxpdHkgY29udHJvbCwgNzM2LDk5NiBTTlBzIHdlcmUgdGVzdGVkIGZvciBhc3NvY2lhdGlvbiB3aXRoIHRoZSBBYlBBIHJlc3BvbnNlIHRvIDMgb3IgNCBBVkEgdmFjY2luYXRpb25zIGdpdmVuIG92ZXIgYSA2LW1vbnRoIHBlcmlvZC4gTm8gU05QIGFjaGlldmVkIHRoZSB0aHJlc2hvbGQgb2YgZ2Vub21lLXdpZGUgc2lnbmlmaWNhbmNlIChwPTV4MTAoLTgpKSwgYnV0IHN1Z2dlc3RpdmUgYXNzb2NpYXRpb25zIChwXHUwMDNjMXgxMCgtNSkpIHdlcmUgb2JzZXJ2ZWQgZm9yIFNOUHMgaW4gb3IgbmVhciB0aGUgY2xhc3MgSUkgcmVnaW9uIG9mIHRoZSBtYWpvciBoaXN0b2NvbXBhdGliaWxpdHkgY29tcGxleCAoTUhDKSwgaW4gdGhlIHByb21vdGVyIHJlZ2lvbiBvZiBTUFNCMSwgYW5kIGFkamFjZW50IHRvIE1FWDNDLiBNdWx0aXZhcmlhYmxlIHJlZ3Jlc3Npb24gbW9kZWxpbmcgc3VnZ2VzdGVkIHRoYXQgbXVjaCBvZiB0aGUgYXNzb2NpYXRpb24gc2lnbmFsIHdpdGhpbiB0aGUgTUhDIGNvcnJlc3BvbmRlZCB0byBwcmV2aW91c2x5IGlkZW50aWZpZWQgSExBIERSLURRIGhhcGxvdHlwZXMgaW52b2x2aW5nIGNvbXBvbmVudCBITEEtRFJCMSBhbGxlbGVzIG9mICoxNTowMSwgKjAxOjAxLCBvciAqMDE6MDIuIFdlIGVzdGltYXRlZCB0aGUgcHJvcG9ydGlvbiBvZiBhZGRpdGl2ZSBnZW5ldGljIHZhcmlhbmNlIGV4cGxhaW5lZCBieSBjb21tb24gU05QIHZhcmlhdGlvbiBmb3IgdGhlIEFiUEEgcmVzcG9uc2UgYWZ0ZXIgdGhlIDYgbW9udGggdmFjY2luYXRpb24uIFRoaXMgYW5hbHlzaXMgaW5kaWNhdGVkIGEgc2lnbmlmaWNhbnQsIGFsYmVpdCBpbXByZWNpc2VseSBlc3RpbWF0ZWQsIGNvbnRyaWJ1dGlvbiBvZiB2YXJpYXRpb24gdGFnZ2VkIGJ5IGNvbW1vbiBwb2x5bW9ycGhpc21zIChwPTAuMDMyKS4gRnV0dXJlIHN0dWRpZXMgd2lsbCBiZSByZXF1aXJlZCB0byByZXBsaWNhdGUgdGhlc2UgZmluZGluZ3MgaW4gRXVyb3BlYW4gQW1lcmljYW5zIGFuZCB0byBmdXJ0aGVyIGVsdWNpZGF0ZSB0aGUgaG9zdCBnZW5ldGljIGZhY3RvcnMgdW5kZXJseWluZyB2YXJpYWJsZSBpbW11bmUgcmVzcG9uc2UgdG8gQVZBLiIsInVybCI6Imh0dHA6Ly9pbnRyYW5ldC5jZGMuZ292L3BobGljL2RpZ2l0YWxyZXBvc2l0b3J5L1NjaWVuY2VDbGlwcy92NGlzczI4X0F1dGhvcnNfUGFqZXdza2kucGRmIiwiZG9pIjoiMTAuMTAxNi9qLnZhY2NpbmUuMjAxMi4wNS4wMzIifX0seyJpZCI6IjI0MjYyIiwidHlwZSI6ImFydGljbGUiLCJhdHRyaWJ1dGVzIjp7ImFydGljbGVfaWQiOiIyNDI2MiIsImF1dGhvciI6IlN0ZXdhcnQsIEIuIFIuLCBDLiBFLiwgIFRva2FycywgSi4gSS4sICBNYXJ0aW4sIFMuIFcuLCAgS2VpdGVsLCBXLiBBLiwgIEtleXNlcmxpbmcsIEguIEwuLCAgQmFiY29jaywgSi4sICBQYXJrZXIsIFMuIEQuLCAgSmFjb2Jzb24sIFIuIE0uLCAgUG9sYW5kLCBHLiBBLiwgIE1jTmVpbCwgTS4gTS4sIiwiam91cm5hbCI6IlZhY2NpbmUiLCJ0aXRsZSI6IkhlYWx0aC1yZWxhdGVkIHF1YWxpdHkgb2YgbGlmZSBpbiB0aGUgQ0RDIEFudGhyYXggVmFjY2luZSBBZHNvcmJlZCBIdW1hbiBDbGluaWNhbCBUcmlhbCIsInllYXIiOiIyMDEyIiwiZGF0ZSI6IjMxLTA4IiwiaXNibl9pc3NuIjoiMTg3My0yNTE4IChFbGVjdHJvbmljKTogMDI2NC00MTBYIChMaW5raW5nKSIsImtleXdvcmRzIjpudWxsLCJhYnN0cmFjdCI6IkJBQ0tHUk9VTkQ6IEFmdGVyIHRoZSBEZXBhcnRtZW50IG9mIERlZmVuc2UgaW1wbGVtZW50ZWQgYSBtYW5kYXRvcnkgYW50aHJheCB2YWNjaW5hdGlvbiBwcm9ncmFtIGluIDE5OTggY29uY2VybnMgd2VyZSByYWlzZWQgYWJvdXQgcG90ZW50aWFsIGxvbmctdGVybSBzYWZldHkgZWZmZWN0cyBvZiB0aGUgY3VycmVudCBhbnRocmF4IHZhY2NpbmUuIFRoZSBDREMgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIEFudGhyYXggVmFjY2luZSBBZHNvcmJlZCAoQVZBKSBIdW1hbiBDbGluaWNhbCBUcmlhbCB0byBldmFsdWF0ZSByb3V0ZSBjaGFuZ2UgYW5kIGRvc2UgcmVkdWN0aW9uIGNvbGxlY3RlZCBkYXRhIG9uIHBhcnRpY2lwYW50cycgcXVhbGl0eSBvZiBsaWZlLiBPdXIgb2JqZWN0aXZlIGlzIHRvIGFzc2VzcyB0aGUgYXNzb2NpYXRpb24gYmV0d2VlbiByZWNlaXB0IG9mIEFWQSBhbmQgY2hhbmdlcyBpbiBoZWFsdGgtcmVsYXRlZCBxdWFsaXR5IG9mIGxpZmUsIGFzIG1lYXN1cmVkIGJ5IHRoZSBTRi0zNiBoZWFsdGggc3VydmV5IChNZWRpY2FsIE91dGNvbWVzIFRydXN0LCBCb3N0b24sIE1BKSwgb3ZlciA0MiBtb250aHMgYWZ0ZXIgdmFjY2luYXRpb24uIE1FVEhPRFM6IDE1NjIgdHJpYWwgcGFydGljaXBhbnRzIGNvbXBsZXRlZCBTRi0zNnYyIGhlYWx0aCBzdXJ2ZXlzIGF0IDAsIDEyLCAxOCwgMzAgYW5kIDQyIG1vbnRocy4gUGh5c2ljYWwgYW5kIG1lbnRhbCBzdW1tYXJ5IHNjb3JlcyB3ZXJlIG9idGFpbmVkIGZyb20gdGhlIHN1cnZleSByZXN1bHRzLiBXZSB1c2VkIEdlbmVyYWxpemVkIEVzdGltYXRpbmcgRXF1YXRpb25zIChHRUUpIGFuYWx5c2VzIHRvIGFzc2VzcyB0aGUgYXNzb2NpYXRpb24gYmV0d2VlbiBwaHlzaWNhbCBhbmQgbWVudGFsIHNjb3JlIGRpZmZlcmVuY2UgZnJvbSBiYXNlbGluZSBhbmQgc2V2ZW4gc3R1ZHkgZ3JvdXBzIHJlY2VpdmluZyBlaXRoZXIgQVZBIGF0IGVhY2ggZG9zZSwgc2FsaW5lIHBsYWNlYm8gYXQgZWFjaCBkb3NlLCBvciBhIHJlZHVjZWQgQVZBIHNjaGVkdWxlIHN1YnN0aXR1dGluZyBzYWxpbmUgcGxhY2VibyBmb3Igc29tZSBkb3Nlcy4gUkVTVUxUUzogT3ZlcmFsbCwgbWVhbiBwaHlzaWNhbCBhbmQgbWVudGFsIHNjb3JlcyB0ZW5kZWQgdG8gZGVjcmVhc2UgYWZ0ZXIgYmFzZWxpbmUuIEhvd2V2ZXIsIHdlIGZvdW5kIG5vIGV2aWRlbmNlIHRoYXQgdGhlIHNjb3JlIGRpZmZlcmVuY2UgZnJvbSBiYXNlbGluZSBjaGFuZ2VkIHNpZ25pZmljYW50bHkgZGlmZmVyZW50bHkgYmV0d2VlbiB0aGUgc2V2ZW4gc3R1ZHkgZ3JvdXBzLiBDT05DTFVTSU9OUzogVGhlc2UgcmVzdWx0cyBkbyBub3QgZmF2b3IgYW4gYXNzb2NpYXRpb24gYmV0d2VlbiByZWNlaXB0IG9mIEFWQSBhbmQgYW4gYWx0ZXJlZCBoZWFsdGgtcmVsYXRlZCBxdWFsaXR5IG9mIGxpZmUgb3ZlciBhIDQyLW1vbnRoIHBlcmlvZC4iLCJ1cmwiOiJodHRwOi8vaW50cmFuZXQuY2RjLmdvdi9waGxpYy9kaWdpdGFscmVwb3NpdG9yeS9TY2llbmNlQ2xpcHMvdjRpc3MzNV9BdXRob3JzX1N0ZXdhcnQucGRmIiwiZG9pIjoiMTAuMTAxNi9qLnZhY2NpbmUuMjAxMi4wNi4wNzYifX0seyJpZCI6IjI0NTUxIiwidHlwZSI6ImFydGljbGUiLCJhdHRyaWJ1dGVzIjp7ImFydGljbGVfaWQiOiIyNDU1MSIsImF1dGhvciI6IkZheSwgTS4gUC4gRi4sIEQuIEEuLCAgTHlubiwgRi4sICBTY2hpZmZlciwgSi4gTS4sICBTdGFyaywgRy4gVi4sICBLb2hiZXJnZXIsIFIuLCAgUXVpbm4sIEMuIFAuLCAgTnV6dW0sIEUuIE8uLCIsImpvdXJuYWwiOiJTY2kgVHJhbnNsIE1lZCIsInRpdGxlIjoiQW50aHJheCB2YWNjaW5lLWluZHVjZWQgYW50aWJvZGllcyBwcm92aWRlIGNyb3NzLXNwZWNpZXMgcHJlZGljdGlvbiBvZiBzdXJ2aXZhbCB0byBhZXJvc29sIGNoYWxsZW5nZSIsInllYXIiOiIyMDEyIiwiZGF0ZSI6IjktRGVjIiwiaXNibl9pc3NuIjoiMTk0Ni02MjQyIChFbGVjdHJvbmljKTogMTk0Ni02MjM0IChMaW5raW5nKSIsImtleXdvcmRzIjpudWxsLCJhYnN0cmFjdCI6IkJlY2F1c2UgY2xpbmljYWwgdHJpYWxzIHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2YgdmFjY2luZXMgYWdhaW5zdCBhbnRocmF4IGFyZSBub3QgZXRoaWNhbCBvciBmZWFzaWJsZSwgbGljZW5zdXJlIGZvciBuZXcgYW50aHJheCB2YWNjaW5lcyB3aWxsIGxpa2VseSBpbnZvbHZlIHRoZSBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uJ3MgXCJBbmltYWwgUnVsZSxcIiBhIHNldCBvZiByZWd1bGF0aW9ucyB0aGF0IGFsbG93IGFwcHJvdmFsIG9mIHByb2R1Y3RzIGJhc2VkIG9uIGVmZmljYWN5IGRhdGEgb25seSBpbiBhbmltYWxzIGNvbWJpbmVkIHdpdGggaW1tdW5vZ2VuaWNpdHkgYW5kIHNhZmV0eSBkYXRhIGluIGFuaW1hbHMgYW5kIGh1bWFucy4gVS5TLiBnb3Zlcm5tZW50LXNwb25zb3JlZCBhbmltYWwgc3R1ZGllcyBoYXZlIHNob3duIGFudGhyYXggdmFjY2luZSBlZmZpY2FjeSBpbiBhIHZhcmlldHkgb2Ygc2V0dGluZ3MuIFdlIGV4YW1pbmVkIGRhdGEgZnJvbSAyMSBvZiB0aG9zZSBzdHVkaWVzIHRvIGRldGVybWluZSB3aGV0aGVyIGFuIGltbXVub2xvZ2ljYWwgYnJpZGdlIGJhc2VkIG9uIGxldGhhbCB0b3hpbiBuZXV0cmFsaXphdGlvbiBhY3Rpdml0eSBhc3NheSAoVE5BKSBjYW4gcHJlZGljdCBzdXJ2aXZhbCBhZ2FpbnN0IGFuIGluaGFsYXRpb24gYW50aHJheCBjaGFsbGVuZ2Ugd2l0aGluIGFuZCBhY3Jvc3Mgc3BlY2llcyBhbmQgZ2VuZXJhLiBUaGUgMjEgc3R1ZGllcyB3ZXJlIGNsYXNzaWZpZWQgaW50byAxMSBkaWZmZXJlbnQgc2V0dGluZ3MsIGVhY2ggb2Ygd2hpY2ggaGFkIHRoZSBzYW1lIGFuaW1hbCBzcGVjaWVzLCB2YWNjaW5lIHR5cGUgYW5kIGZvcm11bGF0aW9uLCB2YWNjaW5hdGlvbiBzY2hlZHVsZSwgdGltZSBvZiBUTkEgbWVhc3VyZW1lbnQsIGFuZCBjaGFsbGVuZ2UgdGltZS4gTG9naXN0aWMgcmVncmVzc2lvbiBtb2RlbHMgZGV0ZXJtaW5lZCB0aGUgY29udHJpYnV0aW9uIG9mIHZhY2NpbmUgZGlsdXRpb24gZG9zZSBhbmQgVE5BIG9uIHByZWRpY3Rpb24gb2Ygc3Vydml2YWwuIEZvciBtb3N0IHNldHRpbmdzLCBsb2dpc3RpYyBtb2RlbHMgdXNpbmcgb25seSBUTkEgZXhwbGFpbmVkIG1vcmUgdGhhbiA3NSUgb2YgdGhlIHN1cnZpdmFsIGVmZmVjdCBvZiB0aGUgbW9kZWxzIHdpdGggZG9zZSBhZGRpdGlvbmFsbHkgaW5jbHVkZWQuIENyb3NzLXNwZWNpZXMgc3Vydml2YWwgcHJlZGljdGlvbnMgdXNpbmcgVE5BIHdlcmUgY29tcGFyZWQgdG8gdGhlIGFjdHVhbCBzdXJ2aXZhbCBhbmQgc2hvd24gdG8gaGF2ZSBnb29kIGFncmVlbWVudCAoQ29oZW4ncyBrYXBwYSByYW5nZWQgZnJvbSAwLjU1IHRvIDAuNzgpLiBJbiBvbmUgc3R1ZHkgZGVzaWduLCBjeW5vbW9sZ3VzIG1hY2FxdWUgZGF0YSBwcmVkaWN0ZWQgNzguNiUgc3Vydml2YWwgaW4gcmhlc3VzIG1hY2FxdWVzIChhY3R1YWwgc3Vydml2YWwsIDgzLjAlKSBhbmQgNzIuNiUgaW4gcmFiYml0cyAoYWN0dWFsIHN1cnZpdmFsLCA2NC42JSkuIFRoZXNlIGRhdGEgYWRkIHN1cHBvcnQgZm9yIHRoZSB1c2Ugb2YgVE5BIGFzIGFuIGltbXVub2xvZ2ljYWwgYnJpZGdlIGJldHdlZW4gc3BlY2llcyB0byBleHRyYXBvbGF0ZSBkYXRhIGluIGFuaW1hbHMgdG8gcHJlZGljdCBhbnRocmF4IHZhY2NpbmUgZWZmZWN0aXZlbmVzcyBpbiBodW1hbnMuIiwidXJsIjoiaHR0cDovL2ludHJhbmV0LmNkYy5nb3YvcGhsaWMvZGlnaXRhbHJlcG9zaXRvcnkvU2NpZW5jZUNsaXBzL3Y0aXNzNDBfQXV0aG9yc19GYXkucGRmIiwiZG9pIjoiMTAuMTEyNi9zY2l0cmFuc2xtZWQuMzAwNDA3MyJ9fSx7ImlkIjoiMjUwMzgiLCJ0eXBlIjoiYXJ0aWNsZSIsImF0dHJpYnV0ZXMiOnsiYXJ0aWNsZV9pZCI6IjI1MDM4IiwiYXV0aG9yIjoiTWVhbmV5LURlbG1hbiwgRC4gWi4sIE0uIEUuLCAgUmFzbXVzc2VuLCBTLiBBLiwgIFN0cmFzc2VyLCBTLiwgIFNoYWRvbXksIFMuLCAgVHVyY2lvcy1SdWl6LCBSLiBNLiwgIFdlbmRlbCwgRy4gRC4sIEpyLiwgIFRyZWFkd2VsbCwgVC4gQS4sICBKYW1pZXNvbiwgRC4gSi4sIiwiam91cm5hbCI6Ik9ic3RldCBHeW5lY29sIiwidGl0bGUiOiJBbnRocmF4IGNhc2VzIGluIHByZWduYW50IGFuZCBwb3N0cGFydHVtIHdvbWVuOiBhIHN5c3RlbWF0aWMgcmV2aWV3IiwieWVhciI6IjIwMTIiLCJkYXRlIjoiRGVjIiwiaXNibl9pc3NuIjoiMTg3My0yMzNYIChFbGVjdHJvbmljKTogMDAyOS03ODQ0IChMaW5raW5nKSIsImtleXdvcmRzIjpudWxsLCJhYnN0cmFjdCI6Ik9CSkVDVElWRTogVG8gZGVzY3JpYmUgdGhlIHdvcmxkd2lkZSBleHBlcmllbmNlIG9mIEJhY2lsbHVzIGFudGhyYWNpcyBpbmZlY3Rpb24gcmVwb3J0ZWQgaW4gcHJlZ25hbnQsIHBvc3RwYXJ0dW0sIGFuZCBsYWN0YXRpbmcgd29tZW4uIERBVEEgU09VUkNFUzogU3R1ZGllcyB3ZXJlIGlkZW50aWZpZWQgdGhyb3VnaCBNRURMSU5FLCBXZWIgb2YgU2NpZW5jZSwgRW1iYXNlLCBhbmQgR2xvYmFsIEhlYWx0aCBkYXRhYmFzZXMgZnJvbSBpbmNlcHRpb24gdW50aWwgTWF5IDIwMTIuIFRoZSBrZXkgd29yZHMgKFtcImFudGhyYXhcIiBvciBcImFudGhyYWNpc1wiXSBhbmQgW1wicHJlZ25hKlwiIG9yIFwibWF0ZXJuKlwiIG9yIFwicG9zdHBhcnR1bVwiIG9yIFwicHVlcnBlcmFsXCIgb3IgXCJsYWN0KlwiIG9yIFwiYnJlYXN0ZmVkKlwiIG9yIFwiYnJlYXN0ZmVlZCpcIiBvciBcImZldGFsXCIgb3IgXCJmZXR1c1wiIG9yIFwibmVvbmF0ZVwiIG9yIFwibmV3Ym9yblwiIG9yIFwiYWJvcnQqXCIgb3IgXCJ1dGVydXNcIl0pIHdlcmUgdXNlZC4gQWRkaXRpb25hbGx5LCBhbGwgcmVmZXJlbmNlcyBmcm9tIHNlbGVjdGVkIGFydGljbGVzIHdlcmUgcmV2aWV3ZWQsIGhhbmQgc2VhcmNoZXMgd2VyZSBjb25kdWN0ZWQsIGFuZCByZWxldmFudCBhdXRob3JzIHdlcmUgY29udGFjdGVkLiBNRVRIT0RTIE9GIFNUVURZIFNFTEVDVElPTjogVGhlIGluY2x1c2lvbiBjcml0ZXJpYSB3ZXJlOiBwdWJsaXNoZWQgYXJ0aWNsZXMgcmVmZXJyaW5nIHRvIHdvbWVuIGRpYWdub3NlZCB3aXRoIGFuIGluZmVjdGlvbiBkdWUgdG8gZXhwb3N1cmUgdG8gQiBhbnRocmFjaXMgZHVyaW5nIHByZWduYW5jeSwgdGhlIHBvc3RwYXJ0dW0gcGVyaW9kLCBvciBkdXJpbmcgbGFjdGF0aW9uOyBhbnkgYXJ0aWNsZSB0eXBlIHJlcG9ydGluZyBwYXRpZW50LXNwZWNpZmljIGRhdGE7IGFydGljbGVzIGluIGFueSBsYW5ndWFnZTsgYW5kIG5vbmR1cGxpY2F0ZSBjYXNlcy4gTm9uLUVuZ2xpc2ggYXJ0aWNsZXMgd2VyZSBwcm9mZXNzaW9uYWxseSB0cmFuc2xhdGVkLiBEdXBsaWNhdGUgcmVwb3J0cywgdW5wdWJsaXNoZWQgcmVwb3J0cywgYW5kIHJldmlldyBhcnRpY2xlcyBkZXBpY3RpbmcgcHJldmlvdXNseSBpZGVudGlmaWVkIGNhc2VzIHdlcmUgZXhjbHVkZWQuIFRBQlVMQVRJT04sIElOVEVHUkFUSU9OLCBBTkQgUkVTVUxUUzogVHdvIGF1dGhvcnMgaW5kZXBlbmRlbnRseSByZXZpZXdlZCBhcnRpY2xlcyBmb3IgaW5jbHVzaW9uLiBUaGUgcHJpbWFyeSBzZWFyY2ggb2YgdGhlIGZvdXIgZGF0YWJhc2VzIHlpZWxkZWQgMSwzNDAgYXJ0aWNsZXMsIGFuZCB0aGUgc2Vjb25kYXJ5IGNyb3NzcmVmZXJlbmNlIHNlYXJjaCByZXZlYWxlZCAxNDYgYXJ0aWNsZXMuIEZvdXJ0ZWVuIGFydGljbGVzIG1ldCB0aGUgaW5jbHVzaW9uIGNyaXRlcmlhLiBJbiB0b3RhbCwgMjAgY2FzZXMgb2YgQiBhbnRocmFjaXMgaW5mZWN0aW9uIHdlcmUgZm91bmQsIDE3IGluIHByZWduYW50IHdvbWVuLCB0d28gaW4gcG9zdHBhcnR1bSB3b21lbiwgYW5kIG9uZSBjYXNlIGluIGEgbGFjdGF0aW5nIHdvbWFuLiBBbW9uZyB0aGVzZSByZXBvcnRzLCAxNiB3b21lbiBkaWVkIGFuZCAxMiBmZXRhbCBvciBuZW9uYXRhbCBsb3NzZXMgd2VyZSByZXBvcnRlZC4gT2YgdGhlc2UgZmF0YWwgY2FzZXMsIG1vc3QgcHJlZGF0ZWQgdGhlIGFkdmVudCBvZiBhbnRpYmlvdGljcy4gQ09OQ0xVU0lPTlM6IEJhc2VkIG9uIHRoZXNlIGNhc2UgcmVwb3J0cywgQiBhbnRocmFjaXMgaW5mZWN0aW9uIGluIHByZWduYW50IGFuZCBwb3N0cGFydHVtIHdvbWVuIGlzIGFzc29jaWF0ZWQgd2l0aCBoaWdoIHJhdGVzIG9mIG1hdGVybmFsIGFuZCBmZXRhbCBkZWF0aC4gRXZpZGVuY2Ugb2YgcG9zc2libGUgbWF0ZXJuYWwtZmV0YWwgdHJhbnNtaXNzaW9uIG9mIEIgYW50aHJhY2lzIGluZmVjdGlvbiB3YXMgaWRlbnRpZmllZCBpbiBlYXJseSBjYXNlIHJlcG9ydHMuIiwidXJsIjoiaHR0cDovL2ludHJhbmV0LmNkYy5nb3YvcGhsaWMvZGlnaXRhbHJlcG9zaXRvcnkvU2NpZW5jZUNsaXBzL3Y0aXNzNDhfQXV0aG9yc19NZWFuZXktRGVsbWFuLnBkZiIsImRvaSI6IjEwLjEwOTcvQU9HLjBiMDEzZTMxODI3MGVjMDgifX0seyJpZCI6IjMxNjI3IiwidHlwZSI6ImFydGljbGUiLCJhdHRyaWJ1dGVzIjp7ImFydGljbGVfaWQiOiIzMTYyNyIsImF1dGhvciI6Ik9zY2hlcndpdHosIEouIFEuLCBDLiBQLiwgIENlYXNlLCBLLiBCLiwiLCJqb3VybmFsIjoiVmFjY2luZSIsInRpdGxlIjoiQW50aHJheCB2YWNjaW5lIHJlY2lwaWVudHMgbGFjayBhbnRpYm9keSBhZ2FpbnN0IHRoZSBsb29wIG5ldXRyYWxpemluZyBkZXRlcm1pbmFudDogYSBwcm90ZWN0aXZlIG5ldXRyYWxpemluZyBlcGl0b3BlIGZyb20gQmFjaWxsdXMgYW50aHJhY2lzIHByb3RlY3RpdmUgYW50aWdlbiIsInllYXIiOiIyMDE1IiwiZGF0ZSI6IjI1LTAzIiwiaXNibl9pc3NuIjoiMDI2NC00MTB4Iiwia2V5d29yZHMiOiJBdmE6IEFudGlib2R5OiBFcGl0b3BlOiBQcm90ZWN0aXZlIGFudGlnZW46IFZhY2NpbmUiLCJhYnN0cmFjdCI6IkJBQ0tHUk9VTkQ6IEVwaXRvcGUtZm9jdXNlZCBpbW11bm9nZW5zIGNhbiBlbGljaXQgYW50aWJvZHkgYWdhaW5zdCB0aGUgbG9vcCBuZXV0cmFsaXppbmcgZGV0ZXJtaW5hbnQgKExORCksIGEgbmV1dHJhbGl6aW5nIGVwaXRvcGUgZm91bmQgd2l0aGluIHRoZSAyYmV0YTItMmJldGEzIGxvb3Agb2YgcHJvdGVjdGl2ZSBhbnRpZ2VuIChQQSksIHdoaWNoIGNhbiBwcm90ZWN0IHJhYmJpdHMgZnJvbSBoaWdoLWRvc2UgaW5oYWxhdGlvbiBjaGFsbGVuZ2Ugd2l0aCBCYWNpbGx1cyBhbnRocmFjaXMgQW1lcyBzdHJhaW4uIEludGVyZXN0aW5nbHksIGRhdGEgc3VnZ2VzdHMgdGhhdCB0aGlzIGVwaXRvcGUgaXMgcmVsYXRpdmVseSBpbW11bm9zaWxlbnQgaW4gcmFiYml0cyBhbmQgbm9uLWh1bWFuIHByaW1hdGVzIGltbXVuaXplZCB3aXRoIGZ1bGwgbGVuZ3RoIFBBLiBNRVRIT0RTOiBUbyBkZXRlcm1pbmUgd2hldGhlciB0aGUgTE5EIGlzIGltbXVub3NpbGVudCBhbW9uZyBodW1hbnMgdmFjY2luYXRlZCB3aXRoIFBBLCB3ZSBzY3JlZW5lZCBhbnRpc2VyYSBmcm9tIEFWQS0gb3IgcGxhY2Viby12YWNjaW5lZXMgZnJvbSBhIGNsaW5pY2FsIHRyaWFsIGZvciBhbnRpYm9keSByZWFjdGl2ZSB3aXRoIHRoZSBMTkQuIFJFU1VMVFM6IEFWQS12YWNjaW5lZSBzZXJhIGhhZCBzaWduaWZpY2FudCBQQS1zcGVjaWZpYyBhbnRpYm9keSBjb21wYXJlZCB0byBwbGFjZWJvLXZhY2NpbmVlIHNlcmE7IGhvd2V2ZXIsIHNlcmEgZnJvbSB0aGUgdHdvIGNvaG9ydHMgd2VyZSBpbmRpc3Rpbmd1aXNoYWJsZSB3aXRoIHJlZ2FyZCB0byB0aGUgZnJlcXVlbmN5IG9mIGluZGl2aWR1YWxzIHdpdGggYW50aWJvZHkgc3BlY2lmaWMgZm9yIHRoZSBMTkQuIENPTkNMVVNJT05TOiBBVkEtdmFjY2luZWVzIGhhdmUgYSBsb3cgZnJlcXVlbmN5IG9mIGFudGlib2R5IHJlYWN0aXZlIHdpdGggdGhlIExORC4gQXMgd2l0aCByYWJiaXRzIGFuZCBub24taHVtYW4gcHJpbWF0ZXMsIHRoZSBlbGljaXRhdGlvbiBvZiBMTkQtc3BlY2lmaWMgYW50aWJvZHkgaW4gaHVtYW5zIGFwcGVhcnMgdG8gcmVxdWlyZSBpbW11bml6YXRpb24gd2l0aCBhbiBlcGl0b3BlLWZvY3VzZWQgdmFjY2luZS4iLCJ1cmwiOiJIdHRwOi8vaW50cmFuZXQuY2RjLmdvdi9saWJyYXJ5L2RvY3Mvc2NpZW5jZV9jbGlwcy92b2xfNy9pc3N1ZV8xNS83LTE1LUF1dGhvcnMtMjU4MjAwNjYucGRmIiwiZG9pIjoiMTAuMTAxNi9qLnZhY2NpbmUuMjAxNS4wMy4wMzcifX0seyJpZCI6IjM2MTE1IiwidHlwZSI6ImFydGljbGUiLCJhdHRyaWJ1dGVzIjp7ImFydGljbGVfaWQiOiIzNjExNSIsImF1dGhvciI6Ik1hcnN0b24sIEMuIEsuIEkuLCBILiwgIExlZSwgUC4sICBDaHVyY2h3ZWxsLCBHLiwgIEd1bWtlLCBNLiwgIFN0YW5laywgRC4sICBHZWUsIEouIEUuLCAgQm95ZXIsIEEuIEUuLCAgR2FsbGVnb3MtQ2FuZGVsYSwgTS4sICBCYXJyLCBKLiBSLiwgIExpLCBILiwgIEJvdWxheSwgRC4sICBDcm9uaW4sIEwuLCAgUXVpbm4sIEMuIFAuLCAgSG9mZm1hc3RlciwgQS4gUi4sIiwiam91cm5hbCI6IlBMb1MgT25lIiwidGl0bGUiOiJBbnRocmF4IHRveGluLWV4cHJlc3NpbmcgQmFjaWxsdXMgY2VyZXVzIGlzb2xhdGVkIGZyb20gYW4gYW50aHJheC1saWtlIGVzY2hhciIsInllYXIiOiIyMDE2IiwiZGF0ZSI6bnVsbCwiaXNibl9pc3NuIjoiMTkzMi02MjAzIiwia2V5d29yZHMiOm51bGwsImFic3RyYWN0IjoiQmFjaWxsdXMgY2VyZXVzIGlzb2xhdGVzIGhhdmUgYmVlbiBkZXNjcmliZWQgaGFyYm9yaW5nIEJhY2lsbHVzIGFudGhyYWNpcyB0b3hpbiBnZW5lcywgbW9zdCBub3RhYmx5IEIuIGNlcmV1cyBHOTI0MSwgYW5kIGNhcGFibGUgb2YgY2F1c2luZyBzZXZlcmUgYW5kIGZhdGFsIHBuZXVtb25pYXMuIFRoaXMgcmVwb3J0IGRlc2NyaWJlcyB0aGUgY2hhcmFjdGVyaXphdGlvbiBvZiBhIEIuIGNlcmV1cyBpc29sYXRlLCBCY0ZMMjAxMywgYXNzb2NpYXRlZCB3aXRoIGEgbmF0dXJhbGx5IG9jY3VycmluZyBjdXRhbmVvdXMgbGVzaW9uIHJlc2VtYmxpbmcgYW4gYW50aHJheCBlc2NoYXIuIFNpbWlsYXIgdG8gRzkyNDEsIEJjRkwyMDEzIGlzIHBvc2l0aXZlIGZvciB0aGUgQi4gYW50aHJhY2lzIHBYTzEgdG94aW4gZ2VuZXMsIGhhcyBhIG11bHRpLWxvY3VzIHNlcXVlbmNlIHR5cGUgb2YgNzgsIGFuZCBhIHBhZ0Egc2VxdWVuY2UgdHlwZSBvZiA5LiBXaG9sZSBnZW5vbWUgc2VxdWVuY2luZyBjb25maXJtcyB0aGUgc2ltaWxhcml0eSB0byBHOTI0MS4gSW4gYWRkaXRpb24gdG8gdGhlIGNocm9tb3NvbWUgaGF2aW5nIGFuIGF2ZXJhZ2UgbnVjbGVvdGlkZSBpZGVudGl0eSBvZiA5OS45OCUgd2hlbiBjb21wYXJlZCB0byBHOTI0MSwgQmNGTDIwMTMgaGFyYm9ycyB0aHJlZSBwbGFzbWlkcyB3aXRoIHZhcnlpbmcgaG9tb2xvZ3kgdG8gdGhlIEc5MjQxIHBsYXNtaWRzIChwQkNYTzEsIHBCQzIxMCBhbmQgcEJGSF8xKS4gVGhpcyBpcyBhbHNvIHRoZSBmaXJzdCByZXBvcnQgdG8gaW5jbHVkZSBzZXJvbG9naWMgdGVzdGluZyBvZiBwYXRpZW50IHNwZWNpbWVucyBhc3NvY2lhdGVkIHdpdGggdGhpcyB0eXBlIG9mIEIuIGNlcmV1cyBpbmZlY3Rpb24gd2hpY2ggcmVzdWx0ZWQgaW4gdGhlIGRldGVjdGlvbiBvZiBhbnRocmF4IGxldGhhbCBmYWN0b3IgdG94ZW1pYSwgYSBxdWFudGlmaWFibGUgc2VydW0gYW50aWJvZHkgcmVzcG9uc2UgdG8gcHJvdGVjdGl2ZSBhbnRpZ2VuIChQQSksIGFuZCBsZXRoYWwgdG94aW4gbmV1dHJhbGl6YXRpb24gYWN0aXZpdHkuIiwidXJsIjoiaHR0cDovL3d3dy5uY2JpLm5sbS5uaWguZ292L3B1Ym1lZC8yNzI1NzkwOS8/b3Rvb2w9Y2RjaWNsaWIiLCJkb2kiOiIxMC4xMzcxL2pvdXJuYWwucG9uZS4wMTU2OTg3In19LHsiaWQiOiIzNzQyNyIsInR5cGUiOiJhcnRpY2xlIiwiYXR0cmlidXRlcyI6eyJhcnRpY2xlX2lkIjoiMzc0MjciLCJhdXRob3IiOiJCYXJkZW5oZWllciwgQi4gSC4gRC4sIEouLCAgRHVkZXJzdGFkdCwgUy4gSy4sICBIaWdncywgSi4gQi4sICBLZWl0aCwgTS4gUC4sICBQYXBhZG9wb3Vsb3MsIFAuIEouLCAgR2lsbGlsYW5kLCBXLiBSLiwgIE1jTmVpbCwgTS4gTS4sIiwiam91cm5hbCI6Ik1pbCBNZWQiLCJ0aXRsZSI6IkFudGhyYXggdmFjY2luZSBhbmQgdGhlIHJpc2sgb2YgcmhldW1hdG9pZCBhcnRocml0aXMgYW5kIHN5c3RlbWljIGx1cHVzIGVyeXRoZW1hdG9zdXMgaW4gdGhlIFUuUy4gbWlsaXRhcnk6IEEgY2FzZS1jb250cm9sIHN0dWR5IiwieWVhciI6IjIwMTYiLCJkYXRlIjoiT2N0IiwiaXNibl9pc3NuIjoiMDAyNi00MDc1Iiwia2V5d29yZHMiOm51bGwsImFic3RyYWN0IjoiVS5TLiBtaWxpdGFyeSBwZXJzb25uZWwgYXNzaWduZWQgdG8gYXJlYXMgZGVlbWVkIHRvIGJlIGF0IGhpZ2ggcmlzayBmb3IgYW50aHJheCBhdHRhY2sgcmVjZWl2ZSBBbnRocmF4IFZhY2NpbmUgQWRzb3JiZWQgKEFWQSkuIEZldyBjYXNlcyBvZiByaGV1bWF0b2lkIGFydGhyaXRpcyAoUkEpIGFuZCBzeXN0ZW1pYyBsdXB1cyBlcnl0aGVtYXRvc3VzIChTTEUpIGhhdmUgYmVlbiByZXBvcnRlZCBpbiBwZXJzb25zIHdobyByZWNlaXZlZCBBVkEuIFVzaW5nIGEgbWF0Y2hlZCBjYXNlLWNvbnRyb2wgc3R1ZHkgZGVzaWduLCB3ZSBhc3Nlc3NlZCB0aGUgcmVsYXRpb25zaGlwIG9mIFJBIGFuZCBTTEUgd2l0aCBBVkEgdmFjY2luYXRpb24gdXNpbmcgdGhlIERlZmVuc2UgTWVkaWNhbCBTdXJ2ZWlsbGFuY2UgU3lzdGVtLiBXZSBpZGVudGlmaWVkIHBvdGVudGlhbCBjYXNlcyB1c2luZyBJbnRlcm5hdGlvbmFsIENsYXNzaWZpY2F0aW9uIG9mIERpc2Vhc2VzLCA5dGggUmV2aXNpb24sIENsaW5pY2FsIE1vZGlmaWNhdGlvbiBjb2RlcyBhbmQgY29uZmlybWVkIGNhc2VzIHdpdGggbWVkaWNhbCByZWNvcmQgcmV2aWV3IGFuZCByaGV1bWF0b2xvZ2lzdCBhZGp1ZGljYXRpb24uIFVzaW5nIGNvbmRpdGlvbmFsIGxvZ2lzdGljIHJlZ3Jlc3Npb24sIHdlIGVzdGltYXRlZCBvZGRzIHJhdGlvcyAoT1IpIGZvciBBVkEgZXhwb3N1cmUgZHVyaW5nIHRpbWUgaW50ZXJ2YWxzIHJhbmdpbmcgZnJvbSA5MCB0byAxLDA5NSBkYXlzIGJlZm9yZSBkaXNlYXNlIG9uc2V0LiBBbW9uZyA3NyBSQSBjYXNlcywgMTMgKDE3JSkgaGFkIGV2ZXIgcmVjZWl2ZWQgQVZBLiBSQSBjYXNlcyB3ZXJlIG5vIG1vcmUgbGlrZWx5IHRoYW4gY29udHJvbHMgdG8gaGF2ZSByZWNlaXZlZCBBVkEgd2hlbiBsb29raW5nIGJhY2sgMSwwOTUgZGF5cyAoT1I6IDEuMDM7IDk1JSBjb25maWRlbmNlIGludGVydmFsIFtDSV06IDAuNDgtMi4xOSkgYnV0IGhhZCBncmVhdGVyIG9kZHMgb2YgZXhwb3N1cmUgaW4gdGhlIHByaW9yIDkwIGRheXMgKE9SOiAzLjkzOyA5NSUgQ0k6IDEuMDgtMTQuMjcpLiBBbW9uZyB0aGUgMzkgU0xFIGNhc2VzLCA1ICgxMyUpIGhhZCBldmVyIHJlY2VpdmVkIEFWQTsgbm8gc2lnbmlmaWNhbnQgZGlmZmVyZW5jZSBpbiByZWNlaXB0IG9mIEFWQSB3YXMgZm91bmQgd2hlbiBjb21wYXJlZCB3aXRoIGNvbnRyb2xzIChPUjogMC45MTsgOTUlIENJOiAwLjI2LTMuMjUpLiBBVkEgd2FzIGFzc29jaWF0ZWQgd2l0aCByZWNlbnQgb25zZXQgUkEsIGJ1dCBkaWQgbm90IGluY3JlYXNlIHRoZSByaXNrIG9mIGRldmVsb3BpbmcgUkEgaW4gdGhlIGxvbmcgdGVybS4iLCJ1cmwiOiJodHRwOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcHVibWVkLzI3NzUzNTc0Lz9vdG9vbD1jZGNpY2xpYiIsImRvaSI6IjEwLjcyMDUvbWlsbWVkLWQtMTUtMDA0ODUifX0seyJpZCI6IjM5NTYxIiwidHlwZSI6ImFydGljbGUiLCJhdHRyaWJ1dGVzIjp7ImFydGljbGVfaWQiOiIzOTU2MSIsImF1dGhvciI6IlN6YWJsZXdza2ksIEMuIE0uIEguLCBLLiwgIEJvd2VyLCBXLiBBLiwgIFNoYWRvbXksIFMuIFYuLCAgSHVwZXJ0LCBOLiwiLCJqb3VybmFsIjoiRW1lcmcgSW5mZWN0IERpcyIsInRpdGxlIjoiQW50aHJheCBjYXNlcyBhc3NvY2lhdGVkIHdpdGggYW5pbWFsLWhhaXIgc2hhdmluZyBicnVzaGVzIiwieWVhciI6IjIwMTciLCJkYXRlIjoiTWF5IiwiaXNibl9pc3NuIjoiMTA4MC02MDQwIiwia2V5d29yZHMiOiJBbnRocmF4OiBCYWNpbGx1cyBhbnRocmFjaXM6IGFuaW1hbCBoYWlyOiBiYWN0ZXJpYTogZGlzaW5mZWN0aW9uOiBmb21pdGVzOiBzaGF2aW5nIGJydXNoZXM6IHdhcmZhcmU6IHpvb25vc2VzIiwiYWJzdHJhY3QiOiJEdXJpbmcgdGhlIEZpcnN0IFdvcmxkIFdhciwgYW50aHJheCBjYXNlcyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgRW5nbGFuZCBpbmNyZWFzZWQgZ3JlYXRseSBhbmQgc2VlbWVkIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCB1c2Ugb2YgbmV3IHNoYXZpbmcgYnJ1c2hlcy4gRnVydGhlciBpbnZlc3RpZ2F0aW9uIHJldmVhbGVkIHRoYXQgdGhlIHNvdXJjZSBtYXRlcmlhbCBhbmQgb3JpZ2luIG9mIHNoYXZpbmcgYnJ1c2hlcyBoYWQgY2hhbmdlZCBkdXJpbmcgdGhlIHdhci4gQ2hlYXAgYnJ1c2hlcyBvZiBpbXBvcnRlZCBob3JzZWhhaXIgd2VyZSBiZWluZyBtYWRlIHRvIGxvb2sgbGlrZSB0aGUgcHJlZmVycmVkIGJhZGdlci1oYWlyIGJydXNoZXMuIFVuZm9ydHVuYXRlbHksIHNvbWUgb2YgdGhlc2UgYnJ1c2hlcyB3ZXJlIG5vdCBlZmZlY3RpdmVseSBkaXNpbmZlY3RlZCBhbmQgYnJvdWdodCB3aXRoIHRoZW0gYSBuYXN0eSBzdG93YXdheTogQmFjaWxsdXMgYW50aHJhY2lzLiBBIHJldmlldyBvZiBvdXRicmVhayBzdW1tYXJpZXMsIHN1cnZlaWxsYW5jZSBkYXRhLCBhbmQgY2FzZSByZXBvcnRzIGluZGljYXRlZCB0aGF0IHRoZXNlIGNhc2VzIG9yaWdpbmF0ZWQgZnJvbSB0aGUgdXNlIG9mIGluZWZmZWN0aXZlbHkgZGlzaW5mZWN0ZWQgYW5pbWFsLWhhaXIgc2hhdmluZyBicnVzaGVzLiBUaGlzIGhpc3RvcmljYWwgaW5mb3JtYXRpb24gaXMgcmVsZXZhbnQgdG8gY3VycmVudCBwdWJsaWMgaGVhbHRoIHByYWN0aWNlIGJlY2F1c2UgcmVuZXdlZCBpbnRlcmVzdCBpbiB2aW50YWdlIGFuZCBhbmltYWwtaGFpciBzaGF2aW5nIGJydXNoZXMgaGFzIGJlZW4gc2VlbiBpbiBwb3B1bGFyIGN1bHR1cmUuIFRoaXMgaW5mb3JtYXRpb24gc2hvdWxkIGhlbHAgaGVhbHRoY2FyZSBwcm92aWRlcnMgYW5kIHB1YmxpYyBoZWFsdGggb2ZmaWNpYWxzIGFuc3dlciBxdWVzdGlvbnMgb24gdGhpcyB0b3BpYy4iLCJ1cmwiOiJodHRwczovL3d3dy5uY2JpLm5sbS5uaWguZ292L3B1Ym1lZC8yODQxODMwMi8/b3Rvb2w9Y2RjaWNsaWIiLCJkb2kiOiIxMC4zMjAxL2VpZDIzMDUuMTYxNTU0In19LHsiaWQiOiI0NTA1NSIsInR5cGUiOiJhcnRpY2xlIiwiYXR0cmlidXRlcyI6eyJhcnRpY2xlX2lkIjoiNDUwNTUiLCJhdXRob3IiOiJOLiBDYWZmZXM7IEsuIEhlbmRyaWNrczsgSi4gUy4gQnJhZGxleTsgTi4gQS4gVHdlbmhhZmVsOyBKLiBNLiBTaW1hcmQiLCJqb3VybmFsIjoiQ2xpbiBJbmZlY3QgRGlzIiwidGl0bGUiOiJBbnRocmF4IG1lbmluZ29lbmNlcGhhbGl0aXMgYW5kIGludHJhY3JhbmlhbCBoZW1vcnJoYWdlIiwieWVhciI6IjIwMjIiLCJkYXRlIjoiMTctT2N0IiwiaXNibl9pc3NuIjoiMTA1OC00ODM4Iiwia2V5d29yZHMiOiJhbnRocmF4XG5pbnRyYWNlcmVicmFsIGhlbW9ycmhhZ2Vcbm5ldXJvcHJvdGVjdGlvblxuc3ViYXJhY2hub2lkIGhlbW9ycmhhZ2UiLCJhYnN0cmFjdCI6IlRoZSBuZXVyb2xvZ2ljYWwgc2VxdWVsYWUgb2YgQmFjaWxsdXMgYW50aHJhY2lzIGluZmVjdGlvbiBpbmNsdWRlIGEgcmFwaWRseSBwcm9ncmVzc2l2ZSBmdWxtaW5hbnQgbWVuaW5nb2VuY2VwaGFsaXRpcyBmcmVxdWVudGx5IGFzc29jaWF0ZWQgd2l0aCBpbnRyYWNyYW5pYWwgaGVtb3JyaGFnZSwgaW5jbHVkaW5nIHN1YmFyYWNobm9pZCBhbmQgaW50cmFjZXJlYnJhbCBoZW1vcnJoYWdlLiBIaWdoZXIgbW9ydGFsaXR5IHRoYW4gb3RoZXIgZm9ybXMgb2YgYmFjdGVyaWFsIG1lbmluZ2l0aXMgc3VnZ2VzdHMgdGhhdCBhbnRpbWljcm9iaWFscyBhbmQgY2FyZGlvcHVsbW9uYXJ5IHN1cHBvcnQgYWxvbmUgbWF5IGJlIGluc3VmZmljaWVudCBhbmQgdGhhdCBzdHJhdGVnaWVzIHRhcmdldGluZyB0aGUgaGVtb3JyaGFnZSBtaWdodCBpbXByb3ZlIG91dGNvbWVzLiBJbiB0aGlzIHJldmlldywgd2UgZGVzY3JpYmUgdGhlIHRveGljIHJvbGUgb2YgaW50cmFjcmFuaWFsIGhlbW9ycmhhZ2UgaW4gYW50aHJheCBtZW5pbmdvZW5jZXBoYWxpdGlzLiBXZSBmaXJzdCBleGFtaW5lIHRoZSBoaWdoIGluY2lkZW5jZSBvZiBpbnRyYWNyYW5pYWwgaGVtb3JyaGFnZSBpbiBwYXRpZW50cyB3aXRoIGFudGhyYXggbWVuaW5nb2VuY2VwaGFsaXRpcy4gV2UgdGhlbiByZXZpZXcgY29tbW9uIGRpc2Vhc2VzIHRoYXQgcHJlc2VudCB3aXRoIGludHJhY3JhbmlhbCBoZW1vcnJoYWdlLCBpbmNsdWRpbmcgYW5ldXJ5c21hbCBzdWJhcmFjaG5vaWQgaGVtb3JyaGFnZSBhbmQgc3BvbnRhbmVvdXMgaW50cmFjZXJlYnJhbCBoZW1vcnJoYWdlLCBwb3N0dWxhdGluZyBhcHBsaWNhYmlsaXR5IG9mIGVzdGFibGlzaGVkIGFuZCBwb3RlbnRpYWwgbmV1cm9pbnRlbnNpdmUgdHJlYXRtZW50cyB0byB0aGUgbXVsdGltb2RhbCBtYW5hZ2VtZW50IG9mIGhlbW9ycmhhZ2ljIGFudGhyYXggbWVuaW5nb2VuY2VwaGFsaXRpcy4gRmluYWxseSwgd2UgZXhhbWluZSB0aGUgdGhlcmFwZXV0aWMgcG90ZW50aWFsIG9mIG1pbm9jeWNsaW5lLCBhbiBhbnRpbWljcm9iaWFsIHRoYXQgaXMgZWZmZWN0aXZlIGFnYWluc3QgQi4gYW50aHJhY2lzIGFuZCB0aGF0IGhhcyBiZWVuIHNob3duIGluIHByZWNsaW5pY2FsIHN0dWRpZXMgdG8gaGF2ZSBuZXVyb3Byb3RlY3RpdmUgcHJvcGVydGllcywgd2hpY2ggdGh1cyBtaWdodCBiZSByZXB1cnBvc2VkIGZvciB0aGlzIGhpc3RvcmljYWxseSBmYXRhbCBkaXNlYXNlLiIsInVybCI6Imh0dHBzOi8vcHVibWVkLm5jYmkubmxtLm5paC5nb3YvMzYyNTE1NTgiLCJkb2kiOiIxMC4xMDkzL2NpZC9jaWFjNTIxIn19LHsiaWQiOiI0NTA1NiIsInR5cGUiOiJhcnRpY2xlIiwiYXR0cmlidXRlcyI6eyJhcnRpY2xlX2lkIjoiNDUwNTYiLCJhdXRob3IiOiJLLiBIZW5kcmlja3M7IFIuIEIuIE1hcnRpbmVzOyBILiBCaWVsYW1vd2ljejsgQS4gRS4gQm95ZXI7IFMuIExvbmc7IFAuIEJ5ZXJzOyBSLiBBLiBTdG9kZGFyZDsgSy4gVGF5bG9yOyBDLiBCLiBLb2x0b247IE0uIEdhbGxlZ29zLUNhbmRlbGE7IEMuIFJvYmVydHM7IE0uIERlTGVvbi1DYXJuZXM7IEouIFNhbHplcjsgUC4gRGF3c29uOyBELiBCcm93bjsgTC4gVGVtcGxldG9uLUxlQm91ZjsgUi4gQy4gTWF2ZXM7IEMuIEd1bHZpazsgRC4gTG9uc3dheTsgSi4gUi4gQmFycjsgVy4gQS4gQm93ZXI7IEEuIEhvZmZtYXN0ZXIiLCJqb3VybmFsIjoiQ2xpbiBJbmZlY3QgRGlzIiwidGl0bGUiOiJXZWxkZXIncyBBbnRocmF4OiBBIHRhbGUgb2YgMiBjYXNlcyIsInllYXIiOiIyMDIyIiwiZGF0ZSI6IjE3LU9jdCIsImlzYm5faXNzbiI6IjEwNTgtNDgzOCIsImtleXdvcmRzIjoiQmFjaWxsdXMgY2VyZXVzXG5CYWNpbGx1cyB0cm9waWN1c1xuYW50aXRveGluXG53ZWxkZXIncyBhbnRocmF4XG53ZWxkaW5nIiwiYWJzdHJhY3QiOiJCYWNpbGx1cyBhbnRocmFjaXMgaGFzIHRyYWRpdGlvbmFsbHkgYmVlbiBjb25zaWRlcmVkIHRoZSBldGlvbG9naWMgYWdlbnQgb2YgYW50aHJheC4gSG93ZXZlciwgYW50aHJheC1saWtlIGlsbG5lc3MgaGFzIGJlZW4gZG9jdW1lbnRlZCBpbiB3ZWxkZXJzIGFuZCBvdGhlciBtZXRhbCB3b3JrZXJzIGluZmVjdGVkIHdpdGggQmFjaWxsdXMgY2VyZXVzIGdyb3VwIHNwcC4gaGFyYm9yaW5nIHBYTzEgdmlydWxlbmNlIGdlbmVzIHRoYXQgcHJvZHVjZSBhbnRocmF4IHRveGlucy4gV2UgcHJlc2VudCAyIHJlY2VudCBjYXNlcyBvZiBzZXZlcmUgcG5ldW1vbmlhIGluIHdlbGRlcnMgd2l0aCBCLiBjZXJldXMgZ3JvdXAgaW5mZWN0aW9ucyBhbmQgZGlzY3VzcyBwb3RlbnRpYWwgcmlzayBmYWN0b3JzIGZvciBpbmZlY3Rpb24gYW5kIHRyZWF0bWVudCBvcHRpb25zLCBpbmNsdWRpbmcgYW50aXRveGluLiIsInVybCI6Imh0dHBzOi8vcHVibWVkLm5jYmkubmxtLm5paC5nb3YvMzYyNTE1NjEiLCJkb2kiOiIxMC4xMDkzL2NpZC9jaWFjNTM1In19LHsiaWQiOiI0NTA2NCIsInR5cGUiOiJhcnRpY2xlIiwiYXR0cmlidXRlcyI6eyJhcnRpY2xlX2lkIjoiNDUwNjQiLCJhdXRob3IiOiJDLiBNLiBQYXJrZXI7IEEuIFcuIEthcmNobWVyOyBNLiBDLiBGaXNoZXI7IEsuIE0uIE11aGFtbWFkOyBQLiBBLiBZdSIsImpvdXJuYWwiOiJDbGluIEluZmVjdCBEaXMiLCJ0aXRsZSI6IlNhZmV0eSBvZiBhbnRpbWljcm9iaWFscyBmb3IgcG9zdGV4cG9zdXJlIHByb3BoeWxheGlzIGFuZCB0cmVhdG1lbnQgb2YgQW50aHJheDogQSByZXZpZXciLCJ5ZWFyIjoiMjAyMiIsImRhdGUiOiIxNy1PY3QiLCJpc2JuX2lzc24iOiIxMDU4LTQ4MzgiLCJrZXl3b3JkcyI6ImFudGhyYXhcbmFudGltaWNyb2JpYWxzXG5zYWZldHkiLCJhYnN0cmFjdCI6IkJBQ0tHUk9VTkQ6IEJhY2lsbHVzIGFudGhyYWNpcywgdGhlIGNhdXNhdGl2ZSBhZ2VudCBmb3IgYW50aHJheCwgcG9zZXMgYSBwb3RlbnRpYWwgYmlvdGVycm9yaXNtIHRocmVhdCBhbmQgaXMgY2FwYWJsZSBvZiBjYXVzaW5nIG1hc3MgbW9yYmlkaXR5IGFuZCBtb3J0YWxpdHkuIEFudGltaWNyb2JpYWxzIGFyZSB0aGUgbWFpbnN0YXkgb2YgcG9zdGV4cG9zdXJlIHByb3BoeWxheGlzIChQRVApIGFuZCB0cmVhdG1lbnQgb2YgYW50aHJheC4gV2UgY29uZHVjdGVkIHRoaXMgc2FmZXR5IHJldmlldyBvZiAyNCBzZWxlY3QgYW50aW1pY3JvYmlhbHMgdG8gaWRlbnRpZnkgYW55IG5ldyBvciBlbWVyZ2luZyBzZXJpb3VzIG9yIHNldmVyZSBhZHZlcnNlIGV2ZW50cyAoQUVzKSB0byBoZWxwIGluZm9ybSB0aGVpciByaXNrLWJlbmVmaXQgZXZhbHVhdGlvbiBmb3IgYW50aHJheC4gTUVUSE9EUzogVHdlbnR5LWZvdXIgYW50aW1pY3JvYmlhbHMgd2VyZSBpbmNsdWRlZCBpbiB0aGlzIHJldmlldy4gVGVydGlhcnkgZGF0YSBzb3VyY2VzIChlLmcuIExhY3RtZWQsIE1pY3JvbWVkZXgsIFJFUFJPVE9YKSB3ZXJlIHJldmlld2VkIGZvciBzYWZldHkgaW5mb3JtYXRpb24gYW5kIHN1bW1hcml6ZWQgdG8gZXZhbHVhdGUgdGhlIGtub3duIHJpc2tzIG9mIHRoZXNlIGFudGltaWNyb2JpYWxzLiBQdWJNZWQgd2FzIGFsc28gc2VhcmNoZWQgZm9yIHB1Ymxpc2hlZCBzYWZldHkgaW5mb3JtYXRpb24gb24gc2VyaW91cyBvciBzZXZlcmUgQUVzIHdpdGggdGhlc2UgYW50aW1pY3JvYmlhbHM7IEFFcyB0aGF0IG1ldCBpbmNsdXNpb24gY3JpdGVyaWEgd2VyZSBhYnN0cmFjdGVkIGFuZCByZXZpZXdlZC4gUkVTVUxUUzogQSB0b3RhbCBvZiAxMzE2IGFydGljbGVzIHdlcmUgcmV2aWV3ZWQuIE5vIGNvbnNpc3RlbnQgb2JzZXJ2YXRpb25zIG9yIHBhdHRlcm5zIHdlcmUgb2JzZXJ2ZWQgYW1vbmcgdGhlIGFic3RyYWN0ZWQgQUVzIGZvciBhIGdpdmVuIGFudGltaWNyb2JpYWw7IHRoZXJlZm9yZSwgdGhlIGxpdGVyYXR1cmUgcmV2aWV3IGRpZCBub3QgcmV2ZWFsIGV2aWRlbmNlIG9mIG5ldyBvciBlbWVyZ2luZyBBRXMgdGhhdCB3b3VsZCBhZGQgdG8gdGhlIHJpc2stYmVuZWZpdCBwcm9maWxlcyBhbHJlYWR5IGtub3duIGZyb20gdGVydGlhcnkgZGF0YSBzb3VyY2VzLiBDT05DTFVTSU9OUzogVGhlIHJldmlld2VkIGFudGltaWNyb2JpYWxzIGhhdmUga25vd24gYW5kL29yIHBvdGVudGlhbCBzZXJpb3VzIG9yIHNldmVyZSByaXNrcyB0aGF0IG1heSBpbmZsdWVuY2Ugc2VsZWN0aW9uIHdoZW4gcmVjb21tZW5kaW5nIGFuIGFudGltaWNyb2JpYWwgZm9yIFBFUCBvciB0cmVhdG1lbnQgb2YgYW50aHJheC4gR2l2ZW4gdGhlIGhpZ2ggZmF0YWxpdHkgcmF0ZSBvZiBhbnRocmF4LCB0aGUgcmlzay1iZW5lZml0IGV2YWx1YXRpb24gZmF2b3JzIHVzZSBvZiB0aGVzZSBhbnRpbWljcm9iaWFscyBmb3IgYW50aHJheC4gVGhlIHBvdGVudGlhbCByaXNrcyBvZiBhbnRpbWljcm9iaWFscyBzaG91bGQgbm90IHByZWNsdWRlIHRoZXNlIHJldmlld2VkIGFudGltaWNyb2JpYWxzIGZyb20gY2xpbmljYWwgY29uc2lkZXJhdGlvbiBmb3IgYW50aHJheCBidXQgcmF0aGVyIGd1aWRlIGFwcHJvcHJpYXRlIGFudGltaWNyb2JpYWwgc2VsZWN0aW9uIGFuZCBwcmlvcml0aXphdGlvbiBhY3Jvc3MgZGlmZmVyZW50IHBhdGllbnQgcG9wdWxhdGlvbnMgd2l0aCByaXNrIG1pdGlnYXRpb24gbWVhc3VyZXMgYXMgd2FycmFudGVkLiIsInVybCI6Imh0dHBzOi8vcHVibWVkLm5jYmkubmxtLm5paC5nb3YvMzYyNTE1NDkiLCJkb2kiOiIxMC4xMDkzL2NpZC9jaWFjNTkyIn19XX0=
  recorded_at: Fri, 27 Jan 2023 01:31:03 GMT
- request:
    method: get
    uri: https://epitrac-be.herokuapp.com/api/v1/articles?disease=Anthrax
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Fri, 27 Jan 2023 01:31:03 GMT
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"fb2232460dd5b0e18419c2c9a85cba0c"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - d02c8c8f-3f19-43c6-afdc-e5a9dcf4370e
      X-Runtime:
      - '0.344783'
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 27 Jan 2023 01:31:04 GMT
recorded_with: VCR 6.1.0
