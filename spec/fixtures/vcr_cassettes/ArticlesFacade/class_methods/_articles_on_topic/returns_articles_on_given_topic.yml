---
http_interactions:
- request:
    method: get
    uri: https://epitrac-be.herokuapp.com/api/v1/articles?disease=Anthrax
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Mon, 09 Jan 2023 00:26:52 GMT
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"887a4e5a6b056b71d734b8915e43735a"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 223c7c15-7658-4cbc-bd30-991e9bae9133
      X-Runtime:
      - '0.220257'
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 09 Jan 2023 00:26:53 GMT
- request:
    method: get
    uri: https://epitrac-be.herokuapp.com/api/v1/articles?disease=Anthrax
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Mon, 09 Jan 2023 00:26:53 GMT
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"887a4e5a6b056b71d734b8915e43735a"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - e21b1630-1c9f-4625-8ad6-0ee6243718ce
      X-Runtime:
      - '0.189560'
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 09 Jan 2023 00:26:53 GMT
- request:
    method: get
    uri: https://epitrac-be.herokuapp.com/api/v1/articles?disease=Anthrax
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Mon, 09 Jan 2023 00:26:53 GMT
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"887a4e5a6b056b71d734b8915e43735a"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - bbd28dcc-c9de-411c-a785-f2098969dd9c
      X-Runtime:
      - '0.162464'
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 09 Jan 2023 00:26:54 GMT
recorded_with: VCR 6.1.0
