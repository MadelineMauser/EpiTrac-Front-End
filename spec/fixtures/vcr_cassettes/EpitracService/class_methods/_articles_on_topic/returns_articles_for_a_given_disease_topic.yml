---
http_interactions:
- request:
    method: get
    uri: https://epitrac-be.herokuapp.com/api/v1/articles?disease=Anthrax
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 11 Jan 2023 21:55:03 GMT
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"41087f062df32b38ff9b28837edd49d7"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - fa85a85d-e972-41f0-abf8-266cde8d5143
      X-Runtime:
      - '0.177271'
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 11 Jan 2023 21:55:03 GMT
recorded_with: VCR 6.1.0
