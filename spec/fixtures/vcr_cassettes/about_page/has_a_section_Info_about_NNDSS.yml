---
http_interactions:
- request:
    method: get
    uri: https://epitrac-be.herokuapp.com/api/v1/disease_info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 11 Jan 2023 18:21:15 GMT
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"00d028a13db5846f6a1d2140f24feab4"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - fb7918d6-c105-4ab0-9194-56747a320337
      X-Runtime:
      - '0.018785'
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 11 Jan 2023 18:21:15 GMT
recorded_with: VCR 6.1.0
